{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/img/app-logo.jpg","webpack:///./src/components/InputField.vue?e36f","webpack:///./src/views/ClientDetails.vue?fb0f","webpack:///./src/views/Home.vue?cda8","webpack:///./src/assets/img/chevron-down-solid.svg","webpack:///./src/components/TitleBar.vue?fb47","webpack:///./src/assets/img/birthday-cake-solid.svg","webpack:///./src/views/RecordForm.vue?2822","webpack:///./src/assets/img/cut-solid.svg","webpack:///./src/assets/img/search-solid.svg","webpack:///./src/views/Services.vue?f24f","webpack:///./src/components/Card.vue?857b","webpack:///./src/views/ClientForm.vue?2357","webpack:///./src/views/ServiceForm.vue?5d69","webpack:///./src/assets/img/phone-solid.svg","webpack:///./src/components/EditCircleButton.vue?721a","webpack:///./src/assets/img/info-circle-solid.svg","webpack:///./src/App.vue?f479","webpack:///./src/assets/img/user-friends-solid.svg","webpack:///./src/views/Clients.vue?dd89","webpack:///./src/components/ServiceItem.vue?1f0f","webpack:///./src/assets/img/calendar-day-solid.svg","webpack:///./src/components/Button.vue?85ca","webpack:///./src/App.vue","webpack:///./src/util/migrations.ts","webpack:///./src/util/idb.ts","webpack:///./src/App.vue?1d14","webpack:///./src/App.vue?97f5","webpack:///./src/views/Home.vue","webpack:///./src/components/Card.vue","webpack:///./src/components/Card.vue?6747","webpack:///./src/components/Card.vue?e156","webpack:///./src/views/Home.vue?26af","webpack:///./src/views/Home.vue?c772","webpack:///./src/views/Clients.vue","webpack:///./src/components/ScrollableList.vue","webpack:///./src/components/AddCircleButton.vue","webpack:///./src/components/AddCircleButton.vue?b6df","webpack:///./src/components/AddCircleButton.vue?578d","webpack:///./src/components/ListItem.vue","webpack:///./src/components/ListItem.vue?124e","webpack:///./src/components/ListItem.vue?9017","webpack:///./src/components/TitleBar.vue","webpack:///./src/components/TitleBar.vue?48a7","webpack:///./src/components/TitleBar.vue?8e27","webpack:///./src/components/InputField.vue","webpack:///./src/components/InputField.vue?70c8","webpack:///./src/components/InputField.vue?63fc","webpack:///./src/components/ScrollableList.vue?e5c0","webpack:///./src/components/ScrollableList.vue?8b92","webpack:///./src/services/shared/generic-service.ts","webpack:///./src/views/Clients.vue?90e3","webpack:///./src/views/Clients.vue?d594","webpack:///./src/views/Services.vue","webpack:///./src/views/Services.vue?c6b9","webpack:///./src/views/Services.vue?aee7","webpack:///./src/views/ClientForm.vue","webpack:///./src/util/date-utils.ts","webpack:///./src/components/Label.vue","webpack:///./src/components/Label.vue?b3b6","webpack:///./src/components/Label.vue?739c","webpack:///./src/components/Button.vue","webpack:///./src/components/Button.vue?7b91","webpack:///./src/components/Button.vue?d484","webpack:///./src/model/client.model.ts","webpack:///./src/model/dto/client-create.ts","webpack:///./src/views/ClientForm.vue?15f8","webpack:///./src/views/ClientForm.vue?b7f3","webpack:///./src/views/ServiceForm.vue","webpack:///./src/model/dto/service-create.ts","webpack:///./src/model/service.model.ts","webpack:///./src/views/ServiceForm.vue?8a8d","webpack:///./src/views/ServiceForm.vue?b7c5","webpack:///./src/views/ClientDetails.vue","webpack:///./src/components/ServiceItem.vue","webpack:///./src/model/record.model.ts","webpack:///./src/components/ServiceItem.vue?6821","webpack:///./src/components/ServiceItem.vue?7cd3","webpack:///./src/components/EditCircleButton.vue","webpack:///./src/components/EditCircleButton.vue?992b","webpack:///./src/components/EditCircleButton.vue?5944","webpack:///./src/services/record-service.ts","webpack:///./src/views/ClientDetails.vue?82a0","webpack:///./src/views/ClientDetails.vue?1416","webpack:///./src/views/RecordForm.vue","webpack:///./src/components/ListSelector.vue","webpack:///./src/components/ListSelector.vue?1ba0","webpack:///./src/components/ListSelector.vue?3abe","webpack:///./src/model/dto/record-create.ts","webpack:///./src/views/RecordForm.vue?66b4","webpack:///./src/views/RecordForm.vue?7862","webpack:///./src/router/index.ts","webpack:///./src/util/mixins.ts","webpack:///./src/registerServiceWorker.ts","webpack:///./src/main.ts","webpack:///./src/components/ScrollableList.vue?64e9","webpack:///./src/components/ListSelector.vue?2d7f","webpack:///./src/components/ListItem.vue?ca29","webpack:///./src/assets/img/clock-solid.svg","webpack:///./src/assets/img/plus-solid.svg","webpack:///./src/components/Label.vue?24fe","webpack:///./src/assets/img/pen-solid.svg","webpack:///./src/components/AddCircleButton.vue?3eab"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","id","Component","migrations","event","db","target","createObjectStore","keyPath","autoIncrement","migrate","migrationIndex","oldVersion","newVersion","indexedDBNotAvailable","dbConnect","dbConnection","Promise","resolve","reject","indexedDB","Error","request","open","dbName","dbVersion","onsuccess","database","onupgradeneeded","onerror","error","dbGet","store","transaction","objectStore","dbGetAll","getAll","dbCreate","add","dbUpdate","put","dbDelete","delete","setup","then","render","class","src","alt","description","navigateTo","props","type","String","default","__scopeId","components","Card","title","icon","items","clients","searchPlaceholder","addAction","clientAddAction","itemAction","clientItemAction","hasIcon","placeholder","searchValue","filteredItems","item","content","modelValue","disabled","inputmode","inputMode","maxlength","maxLength","inputHandler","Boolean","emits","context","emit","AddCircleButton","ListItem","TitleBar","InputField","Function","filter","toLowerCase","includes","this","entity","ScrollableList","clientService","entities","params","services","serviceAddAction","serviceItemAction","serviceService","header","label","phone","birthday","additionalInfo","isEditing","isAlternativeColor","saveAction","cancelAction","editAction","deleteAction","dateToString","date","year","getFullYear","toString","rawMonth","getMonth","month","rawDay","getDate","day","stringToDate","dateMask","exec","parseInt","Date","timeToString","rawHour","getHours","hour","rawMinute","getMinutes","minute","noPadding","hideIcon","Label","Button","route","validateData","alert","getClientId","parseCreateData","clientName","clientPhone","clientBirthday","clientAdditionalInfo","parseUpdateData","go","newClient","editedClient","update","clientId","client","details","getServiceId","serviceName","serviceDetails","newService","editedService","serviceId","service","clientEditAction","clientRecords","record","recordItemAction","recordAddAction","computedDate","time","hourAndMinute","weekDays","weekDay","getDay","records","ServiceItem","EditCircleButton","recordService","getByClientId","recordId","serviceSelector","maskTimeField","ref","handleServiceSelection","to","isOpened","close","ListSelector","getRecordId","recordDate","recordTime","recordDetails","newRecord","editedRecord","now","routes","path","component","Home","Clients","Services","ClientDetails","ClientForm","RecordForm","ServiceForm","router","history","mixin","methods","ready","console","log","registered","cached","updatefound","updated","offline","App","use","mount"],"mappings":"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","file":"js/app.d9ca8868.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"img/app-logo.21597b92.jpg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./InputField.vue?vue&type=style&index=0&id=51e85d04&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ClientDetails.vue?vue&type=style&index=0&id=531f7e11&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Home.vue?vue&type=style&index=0&id=37f9b120&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/chevron-down-solid.b4d86114.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./TitleBar.vue?vue&type=style&index=0&id=1ef8f422&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/birthday-cake-solid.3565e0ff.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./RecordForm.vue?vue&type=style&index=0&id=6f1a38ee&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/cut-solid.54483259.svg\";","module.exports = __webpack_public_path__ + \"img/search-solid.1ba86ee0.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Services.vue?vue&type=style&index=0&id=82e8b0e2&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Card.vue?vue&type=style&index=0&id=919d9780&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ClientForm.vue?vue&type=style&index=0&id=62f055ce&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ServiceForm.vue?vue&type=style&index=0&id=22ee9924&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/phone-solid.381735aa.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./EditCircleButton.vue?vue&type=style&index=0&id=27f27039&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/info-circle-solid.f8b35438.svg\";","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=71b37208&lang=scss\"","module.exports = __webpack_public_path__ + \"img/user-friends-solid.55645753.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Clients.vue?vue&type=style&index=0&id=037b8594&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ServiceItem.vue?vue&type=style&index=0&id=13c16a9b&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/calendar-day-solid.14565641.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Button.vue?vue&type=style&index=0&id=f7b353d6&lang=scss&scoped=true\"","<template>\n  <RouterView v-slot=\"{ Component }\">\n    <Transition name=\"slide-fade\" mode=\"out-in\">\n      <component :is=\"Component\" />\n    </Transition>\n  </RouterView>\n  <div id=\"modal\"></div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, provide } from 'vue';\nimport { dbConnect } from '@/util/idb.ts';\nimport DatabaseConnection from './model/interface/database-connection.interface';\n\nexport default defineComponent({\n  name: 'App',\n  setup() {\n    // Connecting to the Indexed DB\n    const dbConnection: DatabaseConnection = {\n      dbName: 'StudioDB',\n      dbVersion: 1\n    };\n\n    dbConnect(dbConnection).then();\n    provide('dbConnection', dbConnection);\n  }\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/global.scss';\n\ndiv#app {\n  height: 100%;\n}\n</style>\n","/**\n * The list of migrations to be applied to the database\n */\nconst migrations: { (event: IDBVersionChangeEvent): void }[] = [\n  /** Migration to version 1 */\n  (event: IDBVersionChangeEvent) => {\n    // Getting the database\n    const db: IDBDatabase = (event.target as IDBOpenDBRequest).result;\n\n    // Creating basic object stores\n    db.createObjectStore('clients', { keyPath: 'id', autoIncrement: true });\n    db.createObjectStore('services', { keyPath: 'id', autoIncrement: true });\n    db.createObjectStore('records', { keyPath: 'id', autoIncrement: true });\n  }\n];\n\n/**\n * Migrate the database based on the old and new database version values\n * @param event the event associated with the database version change\n */\nfunction migrate(event: IDBVersionChangeEvent) {\n  // Get the current version of the database\n  let migrationIndex = event.oldVersion;\n\n  if (event.newVersion) {\n    while (migrationIndex < event.newVersion) {\n      // Apply the migration\n      migrations[migrationIndex](event);\n\n      // Go to the next version\n      migrationIndex++;\n    }\n  }\n}\n\nexport { migrate };\n","import DatabaseConnection from '@/model/interface/database-connection.interface';\nimport { migrate } from '@/util/migrations.ts';\n\n// Error messages\nconst indexedDBNotAvailable =\n  'Sorry, but the IndexedDB is not available in your browser';\n\n/**\n * Connects to a database by pouplating a Database Connection\n * @param dbConnection Object representing the data used to connect\n */\nasync function dbConnect(\n  dbConnection: DatabaseConnection\n): Promise<DatabaseConnection> {\n  return new Promise((resolve, reject) => {\n    // Check if indexedDB is available in the user's browser\n    if (!window.indexedDB) {\n      reject(new Error(indexedDBNotAvailable));\n    }\n\n    // Connecting to the database\n    const request: IDBOpenDBRequest = window.indexedDB.open(\n      dbConnection.dbName,\n      dbConnection.dbVersion\n    );\n\n    // Success callback\n    request.onsuccess = (event: Event) => {\n      dbConnection.database = (event.target as IDBOpenDBRequest).result;\n      resolve(dbConnection);\n    };\n\n    // Upgrade callback\n    request.onupgradeneeded = (event: IDBVersionChangeEvent) => {\n      migrate(event);\n      dbConnection.database = (event.target as IDBOpenDBRequest).result;\n      resolve(dbConnection);\n    };\n\n    // Error callback\n    request.onerror = (error: Event) => {\n      reject(error);\n    };\n  });\n}\n\n/**\n * Retrieves an item from a store in the database\n * @param db the database to use\n * @param store the store where the data will be retrieved\n * @param key the key of the item to retrieve\n */\nasync function dbGet<T>(\n  db: DatabaseConnection,\n  store: string,\n  key: number\n): Promise<T> {\n  return new Promise((resolve, reject) => {\n    const request = db.database\n      ?.transaction(store)\n      .objectStore(store)\n      .get(key);\n\n    if (request) {\n      // Success callback\n      request.onsuccess = () => {\n        resolve(request.result);\n      };\n\n      // Error callback\n      request.onerror = (error: Event) => {\n        reject(error);\n      };\n    }\n  });\n}\n\n/**\n * Retrieves all items from a store in the database\n * @param db the database to use\n * @param store the store where the data will be retrieved\n */\nasync function dbGetAll<T>(\n  db: DatabaseConnection,\n  store: string\n): Promise<T[]> {\n  return new Promise((resolve, reject) => {\n    const request = db.database\n      ?.transaction(store)\n      .objectStore(store)\n      .getAll();\n\n    if (request) {\n      // Success callback\n      request.onsuccess = () => {\n        resolve(request.result);\n      };\n\n      // Error callback\n      request.onerror = (error: Event) => {\n        reject(error);\n      };\n    }\n  });\n}\n\n/**\n * Creates an item from a store in the database\n * @param db the database to use\n * @param store the store where the data will be created\n * @param object the object that will be created\n */\nasync function dbCreate<T>(\n  db: DatabaseConnection,\n  store: string,\n  object: T\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const request = db.database\n      ?.transaction(store, 'readwrite')\n      .objectStore(store)\n      .add(object);\n\n    if (request) {\n      // Success callback\n      request.onsuccess = () => {\n        resolve();\n      };\n\n      // Error callback\n      request.onerror = (error: Event) => {\n        reject(error);\n      };\n    }\n  });\n}\n\n/**\n * Creates an item from a store in the database\n * @param db the database to use\n * @param store the store where the data will be created\n * @param object the object that will be created\n */\nasync function dbUpdate<T>(\n  db: DatabaseConnection,\n  store: string,\n  object: T\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const request = db.database\n      ?.transaction(store, 'readwrite')\n      .objectStore(store)\n      .put(object);\n\n    if (request) {\n      // Success callback\n      request.onsuccess = () => {\n        resolve();\n      };\n\n      // Error callback\n      request.onerror = (error: Event) => {\n        reject(error);\n      };\n    }\n  });\n}\n\n/**\n * Deletes an item from a store in the database\n * @param db the database to use\n * @param store the store where the data will be retrieved\n * @param key the key of the item to retrieve\n */\nasync function dbDelete<T>(\n  db: DatabaseConnection,\n  store: string,\n  key: number\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const request = db.database\n      ?.transaction(store, 'readwrite')\n      .objectStore(store)\n      .delete(key);\n\n    if (request) {\n      // Success callback\n      request.onsuccess = () => {\n        resolve();\n      };\n\n      // Error callback\n      request.onerror = (error: Event) => {\n        reject(error);\n      };\n    }\n  });\n}\n\nexport { dbConnect, dbGet, dbGetAll, dbCreate, dbUpdate, dbDelete };\n","\nimport { defineComponent, provide } from 'vue';\nimport { dbConnect } from '@/util/idb.ts';\nimport DatabaseConnection from './model/interface/database-connection.interface';\n\nexport default defineComponent({\n  name: 'App',\n  setup() {\n    // Connecting to the Indexed DB\n    const dbConnection: DatabaseConnection = {\n      dbName: 'StudioDB',\n      dbVersion: 1\n    };\n\n    dbConnect(dbConnection).then();\n    provide('dbConnection', dbConnection);\n  }\n});\n","import { render } from \"./App.vue?vue&type=template&id=71b37208\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=71b37208&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"home\">\n    <div class=\"header\">\n      <div class=\"title\">Total Studio</div>\n      <div class=\"subtitle\">Salão de Beleza</div>\n    </div>\n    <div class=\"logo\">\n      <img src=\"@/assets/img/app-logo.jpg\" alt=\"Logo do aplicativo\" />\n    </div>\n    <div class=\"instructions\">Selecione uma opção</div>\n    <div class=\"cards\">\n      <Card\n        description=\"Meus Clientes\"\n        @click=\"navigateTo({ name: 'Clients' })\"\n      />\n      <Card\n        description=\"Meus Serviços\"\n        @click=\"navigateTo({ name: 'Services' })\"\n      />\n    </div>\n    <div class=\"footer\">Total Studio @ 2021</div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport Card from '@/components/Card.vue';\n\nexport default defineComponent({\n  name: 'Home',\n  components: {\n    Card\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\ndiv.home {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n}\n\ndiv.header {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 2rem 0 2rem 0;\n}\n\ndiv.logo img {\n  height: 6rem;\n  margin-bottom: 2rem;\n}\n\ndiv.title {\n  font-family: $app-font-family-title;\n  font-size: 2.25rem;\n}\n\ndiv.subtitle {\n  font-family: $app-font-family-subtitle;\n  font-size: 1.5rem;\n}\n\ndiv.instructions {\n  margin-bottom: 2rem;\n}\n\ndiv.cards {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  gap: 1.25rem;\n  width: 100%;\n  padding: 0 2rem;\n  box-sizing: border-box;\n  margin-bottom: 2rem;\n}\n</style>\n","<template>\n  <div class=\"card\">\n    {{ description }}\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'Card',\n  props: {\n    description: { type: String, default: 'Card Description' }\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.card {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 3.75rem;\n  padding: 0 2rem;\n  background-color: $app-background-color-white;\n  border-radius: 0.25rem;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.25);\n  font-size: 1.25rem;\n  transition: transform 0.1s ease-in;\n\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.05);\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'Card',\n  props: {\n    description: { type: String, default: 'Card Description' }\n  }\n});\n","import { render } from \"./Card.vue?vue&type=template&id=919d9780&scoped=true\"\nimport script from \"./Card.vue?vue&type=script&lang=ts\"\nexport * from \"./Card.vue?vue&type=script&lang=ts\"\n\nimport \"./Card.vue?vue&type=style&index=0&id=919d9780&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-919d9780\"\n\nexport default script","\nimport { defineComponent } from 'vue';\nimport Card from '@/components/Card.vue';\n\nexport default defineComponent({\n  name: 'Home',\n  components: {\n    Card\n  }\n});\n","import { render } from \"./Home.vue?vue&type=template&id=37f9b120&scoped=true\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=37f9b120&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-37f9b120\"\n\nexport default script","<template>\n  <div class=\"clients\">\n    <ScrollableList\n      title=\"Meus Clientes\"\n      :icon=\"require('@/assets/img/user-friends-solid.svg')\"\n      :items=\"clients\"\n      :searchPlaceholder=\"'Pesquisar clientes...'\"\n      :addAction=\"clientAddAction\"\n      :itemAction=\"clientItemAction\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, ref } from 'vue';\nimport ScrollableList from '@/components/ScrollableList.vue';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport ClientCreate from '@/model/dto/client-create';\nimport Client from '@/model/client.model';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'Clients',\n  components: {\n    ScrollableList\n  },\n  setup() {\n    const clients = ref();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n\n    // get client data\n    clientService.getAll().then((entities: Client[]) => {\n      clients.value = entities;\n    });\n\n    /**\n     * Navigates to the new client screen\n     */\n    const clientAddAction = () => router.push({ name: 'NewClient' });\n\n    /**\n     * Navigates to the edit client screen\n     */\n    const clientItemAction = (id: number) =>\n      router.push({ name: 'ClientDetails', params: { id } });\n\n    // expose template variables\n    return { clients, clientAddAction, clientItemAction };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.clients {\n  height: 100%;\n}\n</style>\n","<template>\n  <div class=\"scrollable-list\">\n    <TitleBar :title=\"title\" :icon=\"icon\" />\n    <InputField\n      hasIcon\n      :icon=\"require('@/assets/img/search-solid.svg')\"\n      :placeholder=\"searchPlaceholder\"\n      v-model=\"searchValue\"\n    />\n    <div class=\"items\">\n      <ListItem\n        v-for=\"item in filteredItems\"\n        :key=\"item.id\"\n        :content=\"item.name\"\n        @click=\"itemAction(item.id)\"\n      />\n    </div>\n    <AddCircleButton @click=\"addAction\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, PropType, computed } from 'vue';\nimport AddCircleButton from '@/components/AddCircleButton.vue';\nimport ListItem from '@/components/ListItem.vue';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport SortableListItem from '@/model/interface/sortable-list-item.interface.ts';\n\nexport default defineComponent({\n  name: 'ScrollableList',\n  components: {\n    AddCircleButton,\n    ListItem,\n    TitleBar,\n    InputField\n  },\n  props: {\n    title: { type: String },\n    icon: { type: String },\n    items: { type: Object as PropType<SortableListItem[]>, default: [] },\n    searchPlaceholder: { type: String },\n    addAction: { type: Function },\n    itemAction: { type: Function }\n  },\n  setup(props) {\n    const searchValue = ref('');\n\n    const filteredItems = computed(() => {\n      return props.items.filter((item: SortableListItem) => {\n        return item.name\n          .toLowerCase()\n          .includes(searchValue.value.toLowerCase());\n      });\n    });\n\n    return { searchValue, filteredItems };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.scrollable-list {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\ndiv.items {\n  flex-grow: 1;\n  overflow-y: scroll;\n}\n\ndiv.add-circle-button {\n  position: fixed;\n  right: 1.375rem;\n  bottom: 1.375rem;\n}\n</style>\n","<template>\n  <div class=\"add-circle-button\">\n    <img src=\"@/assets/img/plus-solid.svg\" alt=\"Plus icon\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'AddCircleButton'\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.add-circle-button {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 3.75rem;\n  height: 3.75rem;\n  border-radius: 50%;\n  background-color: $app-button-color-primary;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.25);\n\n  img {\n    height: 1.5625rem;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-color: $app-button-color-primary-hover;\n  }\n\n  &:active {\n    cursor: pointer;\n    background-color: $app-button-color-primary-active;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'AddCircleButton'\n});\n","import { render } from \"./AddCircleButton.vue?vue&type=template&id=07b02b16&scoped=true\"\nimport script from \"./AddCircleButton.vue?vue&type=script&lang=ts\"\nexport * from \"./AddCircleButton.vue?vue&type=script&lang=ts\"\n\nimport \"./AddCircleButton.vue?vue&type=style&index=0&id=07b02b16&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-07b02b16\"\n\nexport default script","<template>\n  <div class=\"list-item\">\n    {{ content }}\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'ListItem',\n  props: {\n    content: { type: String, default: 'List Item' }\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.list-item {\n  padding: 1rem 1.25rem;\n  font-size: 1.125rem;\n  background-color: $app-background-color-white;\n  border-top: 1px solid $app-border-color;\n\n  &:hover {\n    cursor: pointer;\n    color: $app-font-color-white;\n    background-color: $app-button-color-alternative-hover;\n  }\n\n  &:active {\n    cursor: pointer;\n    color: $app-font-color-white;\n    background-color: $app-button-color-alternative-active;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'ListItem',\n  props: {\n    content: { type: String, default: 'List Item' }\n  }\n});\n","import { render } from \"./ListItem.vue?vue&type=template&id=7a8c60d5&scoped=true\"\nimport script from \"./ListItem.vue?vue&type=script&lang=ts\"\nexport * from \"./ListItem.vue?vue&type=script&lang=ts\"\n\nimport \"./ListItem.vue?vue&type=style&index=0&id=7a8c60d5&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-7a8c60d5\"\n\nexport default script","<template>\n  <div class=\"title-bar\">\n    <img :src=\"icon\" alt=\"Clients icon\" />\n    <span>{{ title }} </span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'TitleBar',\n  props: {\n    title: { type: String, default: 'Title Bar' },\n    icon: { type: String }\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.title-bar {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1.5rem 0 1.5rem 0;\n  font-size: 1.5rem;\n  background-color: $app-background-color;\n\n  img {\n    height: 1.875rem;\n    margin-right: 1rem;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'TitleBar',\n  props: {\n    title: { type: String, default: 'Title Bar' },\n    icon: { type: String }\n  }\n});\n","import { render } from \"./TitleBar.vue?vue&type=template&id=1ef8f422&scoped=true\"\nimport script from \"./TitleBar.vue?vue&type=script&lang=ts\"\nexport * from \"./TitleBar.vue?vue&type=script&lang=ts\"\n\nimport \"./TitleBar.vue?vue&type=style&index=0&id=1ef8f422&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1ef8f422\"\n\nexport default script","<template>\n  <div class=\"input-field\">\n    <input\n      class=\"input-field\"\n      :type=\"type\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      :disabled=\"disabled\"\n      :inputmode=\"inputMode\"\n      :maxlength=\"maxLength\"\n      @input=\"inputHandler\"\n    />\n    <img v-if=\"hasIcon\" :src=\"icon\" alt=\"Search icon\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'InputField',\n  props: {\n    modelValue: { type: String },\n    type: { type: String, default: 'text' },\n    placeholder: { type: String, default: '' },\n    hasIcon: { type: Boolean, default: false },\n    icon: { type: String },\n    disabled: { type: Boolean, default: false },\n    inputMode: { type: String, default: '' },\n    maxLength: { type: String, default: '' }\n  },\n  emits: ['update:modelValue'],\n  setup(props, context) {\n    /**\n     * Handles the input event of the input element\n     * @param event the native event from where to grab the input value\n     */\n    const inputHandler = (event: InputEvent): void => {\n      const value = (event.target as HTMLInputElement).value;\n      context.emit('update:modelValue', value);\n    };\n\n    // expose template variables\n    return { inputHandler };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.input-field {\n  position: relative;\n  display: flex;\n  align-items: center;\n  background-color: $app-background-color-white;\n  border-top: 1px solid $app-border-color;\n  border-bottom: 1px solid $app-border-color;\n\n  input.input-field {\n    flex-grow: 1;\n    padding: 1rem 1.25rem;\n    border: none;\n    font-size: 1.125rem;\n\n    &:focus {\n      outline: 2px solid $app-outline-color;\n    }\n  }\n\n  input[type='date'] {\n    -webkit-appearance: none;\n    font-family: 'Roboto Regular';\n    background-color: $app-background-color-white;\n  }\n\n  input:disabled,\n  input[disabled] {\n    background-color: $app-background-color-white;\n  }\n\n  img {\n    position: absolute;\n    right: 0;\n    height: 1.5rem;\n    margin-right: 1.25rem;\n    pointer-events: none;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'InputField',\n  props: {\n    modelValue: { type: String },\n    type: { type: String, default: 'text' },\n    placeholder: { type: String, default: '' },\n    hasIcon: { type: Boolean, default: false },\n    icon: { type: String },\n    disabled: { type: Boolean, default: false },\n    inputMode: { type: String, default: '' },\n    maxLength: { type: String, default: '' }\n  },\n  emits: ['update:modelValue'],\n  setup(props, context) {\n    /**\n     * Handles the input event of the input element\n     * @param event the native event from where to grab the input value\n     */\n    const inputHandler = (event: InputEvent): void => {\n      const value = (event.target as HTMLInputElement).value;\n      context.emit('update:modelValue', value);\n    };\n\n    // expose template variables\n    return { inputHandler };\n  }\n});\n","import { render } from \"./InputField.vue?vue&type=template&id=51e85d04&scoped=true\"\nimport script from \"./InputField.vue?vue&type=script&lang=ts\"\nexport * from \"./InputField.vue?vue&type=script&lang=ts\"\n\nimport \"./InputField.vue?vue&type=style&index=0&id=51e85d04&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-51e85d04\"\n\nexport default script","\nimport { defineComponent, ref, PropType, computed } from 'vue';\nimport AddCircleButton from '@/components/AddCircleButton.vue';\nimport ListItem from '@/components/ListItem.vue';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport SortableListItem from '@/model/interface/sortable-list-item.interface.ts';\n\nexport default defineComponent({\n  name: 'ScrollableList',\n  components: {\n    AddCircleButton,\n    ListItem,\n    TitleBar,\n    InputField\n  },\n  props: {\n    title: { type: String },\n    icon: { type: String },\n    items: { type: Object as PropType<SortableListItem[]>, default: [] },\n    searchPlaceholder: { type: String },\n    addAction: { type: Function },\n    itemAction: { type: Function }\n  },\n  setup(props) {\n    const searchValue = ref('');\n\n    const filteredItems = computed(() => {\n      return props.items.filter((item: SortableListItem) => {\n        return item.name\n          .toLowerCase()\n          .includes(searchValue.value.toLowerCase());\n      });\n    });\n\n    return { searchValue, filteredItems };\n  }\n});\n","import { render } from \"./ScrollableList.vue?vue&type=template&id=17706a74&scoped=true\"\nimport script from \"./ScrollableList.vue?vue&type=script&lang=ts\"\nexport * from \"./ScrollableList.vue?vue&type=script&lang=ts\"\n\nimport \"./ScrollableList.vue?vue&type=style&index=0&id=17706a74&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-17706a74\"\n\nexport default script","import ServiceInterface from './service.interface';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport { dbGet, dbGetAll, dbCreate, dbUpdate, dbDelete } from '@/util/idb.ts';\n\nexport default class GenericService<Entity, EntityCreate>\n  implements ServiceInterface<Entity, EntityCreate> {\n  /**\n   * The name of the store from where to get data\n   */\n  store: string;\n\n  /**\n   * The database connection\n   */\n  db: DatabaseConnection;\n\n  /**\n   * Constructor\n   */\n  constructor(db: DatabaseConnection, store: string) {\n    this.db = db;\n    this.store = store;\n  }\n\n  /**\n   * Gets an entity from the database\n   * @param id the id of the entity to get\n   */\n  async get(id: number): Promise<Entity> {\n    return dbGet(this.db, this.store, id).then();\n  }\n\n  /**\n   * Gets all entities from the database\n   */\n  async getAll(): Promise<Entity[]> {\n    return dbGetAll(this.db, this.store).then();\n  }\n\n  /**\n   * Creates an entity in the database\n   * @param entity the entity to be created\n   */\n  async create(entity: EntityCreate): Promise<void> {\n    return dbCreate(this.db, this.store, entity);\n  }\n\n  /**\n   * Updates an entity in the database\n   * @param entity the entity to be updated\n   */\n  async update(entity: Entity): Promise<void> {\n    return dbUpdate(this.db, this.store, entity);\n  }\n\n  /**\n   * Deletes an entity in the database\n   * @param id the id of the entity to be deleted\n   */\n  async delete(id: number): Promise<void> {\n    return dbDelete(this.db, this.store, id);\n  }\n}\n","\nimport { defineComponent, inject, ref } from 'vue';\nimport ScrollableList from '@/components/ScrollableList.vue';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport ClientCreate from '@/model/dto/client-create';\nimport Client from '@/model/client.model';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'Clients',\n  components: {\n    ScrollableList\n  },\n  setup() {\n    const clients = ref();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n\n    // get client data\n    clientService.getAll().then((entities: Client[]) => {\n      clients.value = entities;\n    });\n\n    /**\n     * Navigates to the new client screen\n     */\n    const clientAddAction = () => router.push({ name: 'NewClient' });\n\n    /**\n     * Navigates to the edit client screen\n     */\n    const clientItemAction = (id: number) =>\n      router.push({ name: 'ClientDetails', params: { id } });\n\n    // expose template variables\n    return { clients, clientAddAction, clientItemAction };\n  }\n});\n","import { render } from \"./Clients.vue?vue&type=template&id=037b8594&scoped=true\"\nimport script from \"./Clients.vue?vue&type=script&lang=ts\"\nexport * from \"./Clients.vue?vue&type=script&lang=ts\"\n\nimport \"./Clients.vue?vue&type=style&index=0&id=037b8594&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-037b8594\"\n\nexport default script","<template>\n  <div class=\"services\">\n    <ScrollableList\n      title=\"Meus Serviços\"\n      :icon=\"require('@/assets/img/cut-solid.svg')\"\n      :searchPlaceholder=\"'Pesquisar serviços...'\"\n      :items=\"services\"\n      :addAction=\"serviceAddAction\"\n      :itemAction=\"serviceItemAction\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, ref } from 'vue';\nimport ScrollableList from '@/components/ScrollableList.vue';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport Service from '@/model/service.model';\nimport ServiceCreate from '@/model/dto/service-create';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'Services',\n  components: {\n    ScrollableList\n  },\n  setup() {\n    const services = ref();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const serviceService = new GenericService<Service, ServiceCreate>(\n      db,\n      'services'\n    );\n\n    // get service data\n    serviceService.getAll().then((entities: Service[]) => {\n      services.value = entities;\n    });\n\n    /**\n     * Navigates to the new service screen\n     */\n    const serviceAddAction = () => router.push({ name: 'NewService' });\n\n    /**\n     * Navigates to the edit service screen\n     */\n    const serviceItemAction = (id: number) =>\n      router.push({ name: 'EditService', params: { id } });\n\n    // expose template variables\n    return { services, serviceAddAction, serviceItemAction };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.services {\n  height: 100%;\n}\n</style>\n","\nimport { defineComponent, inject, ref } from 'vue';\nimport ScrollableList from '@/components/ScrollableList.vue';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport Service from '@/model/service.model';\nimport ServiceCreate from '@/model/dto/service-create';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'Services',\n  components: {\n    ScrollableList\n  },\n  setup() {\n    const services = ref();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const serviceService = new GenericService<Service, ServiceCreate>(\n      db,\n      'services'\n    );\n\n    // get service data\n    serviceService.getAll().then((entities: Service[]) => {\n      services.value = entities;\n    });\n\n    /**\n     * Navigates to the new service screen\n     */\n    const serviceAddAction = () => router.push({ name: 'NewService' });\n\n    /**\n     * Navigates to the edit service screen\n     */\n    const serviceItemAction = (id: number) =>\n      router.push({ name: 'EditService', params: { id } });\n\n    // expose template variables\n    return { services, serviceAddAction, serviceItemAction };\n  }\n});\n","import { render } from \"./Services.vue?vue&type=template&id=82e8b0e2&scoped=true\"\nimport script from \"./Services.vue?vue&type=script&lang=ts\"\nexport * from \"./Services.vue?vue&type=script&lang=ts\"\n\nimport \"./Services.vue?vue&type=style&index=0&id=82e8b0e2&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-82e8b0e2\"\n\nexport default script","<template>\n  <div class=\"client-form\">\n    <TitleBar\n      title=\"Meus Clientes\"\n      :icon=\"require('@/assets/img/user-friends-solid.svg')\"\n    />\n    <div class=\"content\">\n      <div class=\"header\">\n        {{ header }}\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Nome\"\n          :src=\"require('@/assets/img/user-friends-solid.svg')\"\n        />\n        <InputField placeholder=\"Digite o nome do cliente...\" v-model=\"name\" />\n      </div>\n      <div class=\"input-group\">\n        <Label label=\"Contato\" :src=\"require('@/assets/img/phone-solid.svg')\" />\n        <InputField\n          placeholder=\"Digite o contato do cliente...\"\n          v-model=\"phone\"\n          type=\"tel\"\n        />\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Aniversário\"\n          :src=\"require('@/assets/img/birthday-cake-solid.svg')\"\n        />\n        <InputField\n          placeholder=\"Selecione o aniversário do cliente...\"\n          v-model=\"birthday\"\n          type=\"date\"\n        />\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Outras Informações\"\n          :src=\"require('@/assets/img/info-circle-solid.svg')\"\n        />\n        <InputField\n          placeholder=\"Digite outras informações do cliente...\"\n          v-model=\"additionalInfo\"\n        />\n      </div>\n      <div class=\"buttons\">\n        <Button\n          v-if=\"!isEditing\"\n          isAlternativeColor\n          label=\"Salvar Cliente\"\n          @click=\"saveAction\"\n        />\n        <Button v-if=\"!isEditing\" label=\"Cancelar\" @click=\"cancelAction\" />\n        <Button\n          v-if=\"isEditing\"\n          isAlternativeColor\n          label=\"Salvar Cliente\"\n          @click=\"editAction\"\n        />\n        <Button\n          v-if=\"isEditing\"\n          label=\"Excluir Cliente\"\n          @click=\"deleteAction\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { stringToDate, dateToString } from '@/util/date-utils.ts';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport Label from '@/components/Label.vue';\nimport Button from '@/components/Button.vue';\nimport Client from '@/model/client.model.ts';\nimport ClientCreate from '@/model/dto/client-create';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'ClientForm',\n  components: {\n    TitleBar,\n    InputField,\n    Label,\n    Button\n  },\n  props: {\n    isEditing: { type: Boolean, default: false }\n  },\n  setup(props) {\n    const name = ref('');\n    const phone = ref('');\n    const birthday = ref('');\n    const additionalInfo = ref('');\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n\n    /**\n     * Returns a computed property depending on the edit mode\n     */\n    const header = computed(() => {\n      return props.isEditing ? 'Editar cliente' : 'Cadastrar novo cliente';\n    });\n\n    /**\n     * Validates the input data before persisting\n     */\n    const validateData = (): boolean => {\n      if (!name.value) {\n        window.alert('Digite um nome válido para o cliente.');\n        return false;\n      }\n      return true;\n    };\n\n    /**\n     * Gets the current client id from the router parameters\n     * @returns the id of the current client\n     */\n    const getClientId = (): number => {\n      return parseInt(route.params.id as string, 10);\n    };\n\n    /**\n     * Parses the client data and returns a client creation DTO\n     * @returns a new client DTO with the parsed data\n     */\n    const parseCreateData = (): ClientCreate => {\n      const clientName = name.value;\n      const clientPhone = phone.value;\n      const clientBirthday = stringToDate(birthday.value);\n      const clientAdditionalInfo = additionalInfo.value;\n\n      return new ClientCreate(\n        clientName,\n        clientPhone,\n        clientBirthday,\n        clientAdditionalInfo\n      );\n    };\n\n    /**\n     * Parses the client data and returns a client object\n     * @returns a new client object with the parsed data\n     */\n    const parseUpdateData = (): Client => {\n      const clientName = name.value;\n      const clientPhone = phone.value;\n      const clientBirthday = stringToDate(birthday.value);\n      const clientAdditionalInfo = additionalInfo.value;\n\n      return new Client(\n        getClientId(),\n        clientName,\n        clientPhone,\n        clientBirthday,\n        clientAdditionalInfo\n      );\n    };\n\n    /**\n     * Handles the cancel button click and returns to the client list\n     */\n    const cancelAction = (): void => {\n      router.go(-1);\n    };\n\n    /**\n     * Handles the save button click and returns to the client list\n     */\n    const saveAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const newClient = parseCreateData();\n\n      // create data\n      clientService.create(newClient).then(() => {\n        // return to client list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the edit button click and returns to the client list\n     */\n    const editAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const editedClient = parseUpdateData();\n\n      // update data\n      clientService.update(editedClient).then(() => {\n        // return to client list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the delete button click and returns to the client list\n     */\n    const deleteAction = (): void => {\n      // parse data\n      const clientId = getClientId();\n\n      // delete data\n      clientService.delete(clientId).then(() => {\n        // return to client list\n        router.go(-2);\n      });\n    };\n\n    // loading information on edit\n    if (props.isEditing) {\n      // getting the client being edited\n      const clientId = getClientId();\n      clientService.get(clientId).then((client: Client) => {\n        // updating fields\n        name.value = client.name;\n        phone.value = client.phone;\n        birthday.value = dateToString(client.birthday);\n        additionalInfo.value = client.additionalInfo;\n      });\n    }\n\n    // expose template variables\n    return {\n      name,\n      phone,\n      birthday,\n      additionalInfo,\n      header,\n      cancelAction,\n      saveAction,\n      editAction,\n      deleteAction\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\ndiv.client-form {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\ndiv.content {\n  overflow-y: scroll;\n\n  div.header {\n    font-size: 1.125rem;\n    padding: 0 1rem 1rem 1rem;\n  }\n\n  div.input-group {\n    margin-bottom: 1rem;\n  }\n}\n\ndiv.buttons {\n  display: flex;\n  padding: 1rem;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n</style>\n","/**\n * Returns a date as a string in the YYYY-MM-DD format\n * @param date the date to be converted\n * @returns a string representing the date\n */\nfunction dateToString(date: Date | null): string {\n  // checking if the date is valid\n  if (!date) {\n    return '';\n  }\n\n  // getting the year as a string\n  const year = date.getFullYear().toString();\n\n  // getting the month as a string\n  const rawMonth = (date.getMonth() + 1).toString();\n  const month = rawMonth.length == 1 ? `0${rawMonth}` : rawMonth;\n\n  // getting the day as a string\n  const rawDay = date.getDate().toString();\n  const day = rawDay.length == 1 ? `0${rawDay}` : rawDay;\n\n  // returning formatted date\n  return `${year}-${month}-${day}`;\n}\n\n/**\n * Returns a string in the YYYY-MM-DD format as a Date object\n * @param date the string to be converted\n * @returns a date representing the string\n */\nfunction stringToDate(date: string): Date | null {\n  const dateMask = /(\\d{4})-(\\d{2})-(\\d{2})/;\n  const result = dateMask.exec(date);\n\n  if (result) {\n    const year: number = parseInt(result[1], 10);\n    const month: number = parseInt(result[2], 10);\n    const date: number = parseInt(result[3], 10);\n\n    return new Date(year, month - 1, date);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a date as a string in the HH:MM format\n * @param date the date to be converted\n * @returns a string representing the time\n */\nfunction timeToString(date: Date | null): string {\n  // checking if the date is valid\n  if (!date) {\n    return '';\n  }\n\n  // getting the hour as a string\n  const rawHour = date.getHours().toString();\n  const hour = rawHour.length == 1 ? `0${rawHour}` : rawHour;\n\n  // getting the hour as a string\n  const rawMinute = date.getMinutes().toString();\n  const minute = rawMinute.length == 1 ? `0${rawMinute}` : rawMinute;\n\n  // returning formatted date\n  return `${hour}:${minute}`;\n}\n\nexport { dateToString, stringToDate, timeToString };\n","<template>\n  <div class=\"label\" :class=\"{ 'no-padding': noPadding }\">\n    <img v-if=\"!hideIcon\" :src=\"src\" alt=\"Label icon\" />\n    {{ label }}\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'Label',\n  props: {\n    src: { type: String },\n    hideIcon: { type: Boolean, default: false },\n    noPadding: { type: Boolean, default: false },\n    label: { type: String, default: 'Label' }\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\ndiv.label {\n  display: flex;\n  align-items: center;\n  padding: 0 1.25rem 1rem 1rem;\n\n  &.no-padding {\n    padding-bottom: 0;\n  }\n\n  img {\n    height: 1.125rem;\n    margin-right: 0.5rem;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'Label',\n  props: {\n    src: { type: String },\n    hideIcon: { type: Boolean, default: false },\n    noPadding: { type: Boolean, default: false },\n    label: { type: String, default: 'Label' }\n  }\n});\n","import { render } from \"./Label.vue?vue&type=template&id=7fc0a864&scoped=true\"\nimport script from \"./Label.vue?vue&type=script&lang=ts\"\nexport * from \"./Label.vue?vue&type=script&lang=ts\"\n\nimport \"./Label.vue?vue&type=style&index=0&id=7fc0a864&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-7fc0a864\"\n\nexport default script","<template>\n  <button\n    v-bind:class=\"{ 'alternative-color': isAlternativeColor }\"\n    class=\"button\"\n  >\n    {{ label }}\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'Button',\n  props: {\n    label: { type: String, default: 'Label' },\n    isAlternativeColor: { type: Boolean, default: false }\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\nbutton.button {\n  padding: 1rem 1.5rem;\n  color: $app-font-color-white;\n  background-color: $app-button-color-primary;\n  border-radius: 0.25rem;\n  box-shadow: 0.125rem 0.125rem 0.25rem rgba(0, 0, 0, 0.25);\n  border: none;\n  outline: none;\n  width: 100%;\n  font-size: 1.5rem;\n  font-family: 'Roboto Regular';\n\n  &.alternative-color {\n    background-color: $app-button-color-alternative;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-color: $app-button-color-primary-hover;\n\n    &.alternative-color {\n      background-color: $app-button-color-alternative-hover;\n    }\n  }\n\n  &:active {\n    cursor: pointer;\n    background-color: $app-button-color-primary-active;\n\n    &.alternative-color {\n      background-color: $app-button-color-alternative-active;\n    }\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'Button',\n  props: {\n    label: { type: String, default: 'Label' },\n    isAlternativeColor: { type: Boolean, default: false }\n  }\n});\n","import { render } from \"./Button.vue?vue&type=template&id=f7b353d6&scoped=true\"\nimport script from \"./Button.vue?vue&type=script&lang=ts\"\nexport * from \"./Button.vue?vue&type=script&lang=ts\"\n\nimport \"./Button.vue?vue&type=style&index=0&id=f7b353d6&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-f7b353d6\"\n\nexport default script","import SortableListItem from './interface/sortable-list-item.interface';\n\n/**\n * Class that represents a client\n */\nexport default class Client implements SortableListItem {\n  id: number;\n  name: string;\n  phone: string;\n  birthday: Date | null;\n  additionalInfo: string;\n\n  /**\n   * Constructor\n   */\n  constructor(\n    id: number,\n    name: string,\n    phone: string,\n    birthday: Date | null,\n    additionalInfo: string\n  ) {\n    this.id = id;\n    this.name = name;\n    this.phone = phone;\n    this.birthday = birthday;\n    this.additionalInfo = additionalInfo;\n  }\n}\n","/**\n * A DTO that represents a request to create a client\n */\nexport default class ClientCreate {\n  name: string;\n  phone: string;\n  birthday: Date | null;\n  additionalInfo: string;\n\n  /**\n   * Constructor\n   */\n  constructor(\n    name: string,\n    phone: string,\n    birthday: Date | null,\n    additionalInfo: string\n  ) {\n    this.name = name;\n    this.phone = phone;\n    this.birthday = birthday;\n    this.additionalInfo = additionalInfo;\n  }\n}\n","\nimport { computed, defineComponent, inject, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { stringToDate, dateToString } from '@/util/date-utils.ts';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport Label from '@/components/Label.vue';\nimport Button from '@/components/Button.vue';\nimport Client from '@/model/client.model.ts';\nimport ClientCreate from '@/model/dto/client-create';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'ClientForm',\n  components: {\n    TitleBar,\n    InputField,\n    Label,\n    Button\n  },\n  props: {\n    isEditing: { type: Boolean, default: false }\n  },\n  setup(props) {\n    const name = ref('');\n    const phone = ref('');\n    const birthday = ref('');\n    const additionalInfo = ref('');\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n\n    /**\n     * Returns a computed property depending on the edit mode\n     */\n    const header = computed(() => {\n      return props.isEditing ? 'Editar cliente' : 'Cadastrar novo cliente';\n    });\n\n    /**\n     * Validates the input data before persisting\n     */\n    const validateData = (): boolean => {\n      if (!name.value) {\n        window.alert('Digite um nome válido para o cliente.');\n        return false;\n      }\n      return true;\n    };\n\n    /**\n     * Gets the current client id from the router parameters\n     * @returns the id of the current client\n     */\n    const getClientId = (): number => {\n      return parseInt(route.params.id as string, 10);\n    };\n\n    /**\n     * Parses the client data and returns a client creation DTO\n     * @returns a new client DTO with the parsed data\n     */\n    const parseCreateData = (): ClientCreate => {\n      const clientName = name.value;\n      const clientPhone = phone.value;\n      const clientBirthday = stringToDate(birthday.value);\n      const clientAdditionalInfo = additionalInfo.value;\n\n      return new ClientCreate(\n        clientName,\n        clientPhone,\n        clientBirthday,\n        clientAdditionalInfo\n      );\n    };\n\n    /**\n     * Parses the client data and returns a client object\n     * @returns a new client object with the parsed data\n     */\n    const parseUpdateData = (): Client => {\n      const clientName = name.value;\n      const clientPhone = phone.value;\n      const clientBirthday = stringToDate(birthday.value);\n      const clientAdditionalInfo = additionalInfo.value;\n\n      return new Client(\n        getClientId(),\n        clientName,\n        clientPhone,\n        clientBirthday,\n        clientAdditionalInfo\n      );\n    };\n\n    /**\n     * Handles the cancel button click and returns to the client list\n     */\n    const cancelAction = (): void => {\n      router.go(-1);\n    };\n\n    /**\n     * Handles the save button click and returns to the client list\n     */\n    const saveAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const newClient = parseCreateData();\n\n      // create data\n      clientService.create(newClient).then(() => {\n        // return to client list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the edit button click and returns to the client list\n     */\n    const editAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const editedClient = parseUpdateData();\n\n      // update data\n      clientService.update(editedClient).then(() => {\n        // return to client list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the delete button click and returns to the client list\n     */\n    const deleteAction = (): void => {\n      // parse data\n      const clientId = getClientId();\n\n      // delete data\n      clientService.delete(clientId).then(() => {\n        // return to client list\n        router.go(-2);\n      });\n    };\n\n    // loading information on edit\n    if (props.isEditing) {\n      // getting the client being edited\n      const clientId = getClientId();\n      clientService.get(clientId).then((client: Client) => {\n        // updating fields\n        name.value = client.name;\n        phone.value = client.phone;\n        birthday.value = dateToString(client.birthday);\n        additionalInfo.value = client.additionalInfo;\n      });\n    }\n\n    // expose template variables\n    return {\n      name,\n      phone,\n      birthday,\n      additionalInfo,\n      header,\n      cancelAction,\n      saveAction,\n      editAction,\n      deleteAction\n    };\n  }\n});\n","import { render } from \"./ClientForm.vue?vue&type=template&id=62f055ce&scoped=true\"\nimport script from \"./ClientForm.vue?vue&type=script&lang=ts\"\nexport * from \"./ClientForm.vue?vue&type=script&lang=ts\"\n\nimport \"./ClientForm.vue?vue&type=style&index=0&id=62f055ce&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-62f055ce\"\n\nexport default script","<template>\n  <div class=\"service-form\">\n    <TitleBar\n      title=\"Meus Serviços\"\n      :icon=\"require('@/assets/img/cut-solid.svg')\"\n    />\n    <div class=\"content\">\n      <div class=\"header\">\n        {{ header }}\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Nome do serviço\"\n          :src=\"require('@/assets/img/cut-solid.svg')\"\n        />\n        <InputField placeholder=\"Digite o nome do serviço...\" v-model=\"name\" />\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Outras Informações\"\n          :src=\"require('@/assets/img/info-circle-solid.svg')\"\n        />\n        <InputField\n          placeholder=\"Digite outras informações do serviço...\"\n          v-model=\"details\"\n        />\n      </div>\n      <div class=\"buttons\">\n        <Button\n          v-if=\"!isEditing\"\n          isAlternativeColor\n          label=\"Salvar Serviço\"\n          @click=\"saveAction\"\n        />\n        <Button v-if=\"!isEditing\" label=\"Cancelar\" @click=\"cancelAction\" />\n        <Button\n          v-if=\"isEditing\"\n          isAlternativeColor\n          label=\"Salvar Serviço\"\n          @click=\"editAction\"\n        />\n        <Button\n          v-if=\"isEditing\"\n          label=\"Excluir Serviço\"\n          @click=\"deleteAction\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport Label from '@/components/Label.vue';\nimport Button from '@/components/Button.vue';\nimport ServiceCreate from '@/model/dto/service-create';\nimport GenericService from '@/services/shared/generic-service';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport Service from '@/model/service.model.ts';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'ServiceForm',\n  components: {\n    TitleBar,\n    InputField,\n    Label,\n    Button\n  },\n  props: {\n    isEditing: { type: Boolean, default: false }\n  },\n  setup(props) {\n    const name = ref('');\n    const details = ref('');\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const serviceService = new GenericService<Service, ServiceCreate>(\n      db,\n      'services'\n    );\n\n    /**\n     * Returns a computed property depending on the edit mode\n     */\n    const header = computed(() => {\n      return props.isEditing ? 'Editar serviço' : 'Cadastrar novo serviço';\n    });\n\n    /**\n     * Validates the input data before persisting\n     */\n    const validateData = (): boolean => {\n      if (!name.value) {\n        window.alert('Digite um nome válido para o serviço.');\n        return false;\n      }\n      return true;\n    };\n\n    /**\n     * Gets the current service id from the router parameters\n     * @returns the id of the current service\n     */\n    const getServiceId = (): number => {\n      return parseInt(route.params.id as string, 10);\n    };\n\n    /**\n     * Parses the service data and returns a service creation DTO\n     * @returns a new service DTO the parsed data\n     */\n    const parseCreateData = (): ServiceCreate => {\n      const serviceName = name.value;\n      const serviceDetails = details.value;\n\n      return new ServiceCreate(serviceName, serviceDetails);\n    };\n\n    /**\n     * Parses the service data and returns a service object\n     * @returns a new service object with the parsed data\n     */\n    const parseUpdateData = (): Service => {\n      const serviceName = name.value;\n      const serviceDetails = details.value;\n\n      return new Service(getServiceId(), serviceName, serviceDetails);\n    };\n\n    /**\n     * Handles the cancel button click and returns to the service list\n     */\n    const cancelAction = (): void => {\n      router.go(-1);\n    };\n\n    /**\n     * Handles the save button click and returns to the service list\n     */\n    const saveAction = (): void => {\n      // validate data\n      if (!name.value) {\n        window.alert('Digite um nome válido para o serviço.');\n        return;\n      }\n\n      // parse data\n      const newService = parseCreateData();\n\n      // create data\n      serviceService.create(newService).then(() => {\n        // return to service list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the edit button click and returns to the service list\n     */\n    const editAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const editedService = parseUpdateData();\n\n      // update data\n      serviceService.update(editedService).then(() => {\n        // return to service list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the delete button click and returns to the service list\n     */\n    const deleteAction = (): void => {\n      // parse data\n      const serviceId = getServiceId();\n\n      // delete data\n      serviceService.delete(serviceId).then(() => {\n        // return to service list\n        router.go(-1);\n      });\n    };\n\n    // loading information on edit\n    if (props.isEditing) {\n      // getting the service being edited\n      const serviceId = getServiceId();\n      serviceService.get(serviceId).then((service: Service) => {\n        // updating fields\n        name.value = service.name;\n        details.value = service.details;\n      });\n    }\n\n    // expose template variables\n    return {\n      name,\n      details,\n      header,\n      cancelAction,\n      saveAction,\n      editAction,\n      deleteAction\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\ndiv.service-form {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\ndiv.content {\n  overflow-y: scroll;\n\n  div.header {\n    font-size: 1.125rem;\n    padding: 0 1rem 1rem 1rem;\n  }\n\n  div.input-group {\n    margin-bottom: 1rem;\n  }\n}\n\ndiv.buttons {\n  display: flex;\n  padding: 1rem;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n</style>\n","/**\n * A DTO that represents a request to create a service\n */\nexport default class ServiceCreate {\n  name: string;\n  details: string;\n\n  /**\n   * Constructor\n   */\n  constructor(name: string, details: string) {\n    this.name = name;\n    this.details = details;\n  }\n}\n","import SortableListItem from './interface/sortable-list-item.interface';\n\n/**\n * Class that represents the a service provided\n */\nexport default class Service implements SortableListItem {\n  id: number;\n  name: string;\n  details: string;\n\n  /**\n   * Constructor\n   */\n  constructor(id: number, name: string, details: string) {\n    this.id = id;\n    this.name = name;\n    this.details = details;\n  }\n}\n","\nimport { computed, defineComponent, inject, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport Label from '@/components/Label.vue';\nimport Button from '@/components/Button.vue';\nimport ServiceCreate from '@/model/dto/service-create';\nimport GenericService from '@/services/shared/generic-service';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport Service from '@/model/service.model.ts';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'ServiceForm',\n  components: {\n    TitleBar,\n    InputField,\n    Label,\n    Button\n  },\n  props: {\n    isEditing: { type: Boolean, default: false }\n  },\n  setup(props) {\n    const name = ref('');\n    const details = ref('');\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const serviceService = new GenericService<Service, ServiceCreate>(\n      db,\n      'services'\n    );\n\n    /**\n     * Returns a computed property depending on the edit mode\n     */\n    const header = computed(() => {\n      return props.isEditing ? 'Editar serviço' : 'Cadastrar novo serviço';\n    });\n\n    /**\n     * Validates the input data before persisting\n     */\n    const validateData = (): boolean => {\n      if (!name.value) {\n        window.alert('Digite um nome válido para o serviço.');\n        return false;\n      }\n      return true;\n    };\n\n    /**\n     * Gets the current service id from the router parameters\n     * @returns the id of the current service\n     */\n    const getServiceId = (): number => {\n      return parseInt(route.params.id as string, 10);\n    };\n\n    /**\n     * Parses the service data and returns a service creation DTO\n     * @returns a new service DTO the parsed data\n     */\n    const parseCreateData = (): ServiceCreate => {\n      const serviceName = name.value;\n      const serviceDetails = details.value;\n\n      return new ServiceCreate(serviceName, serviceDetails);\n    };\n\n    /**\n     * Parses the service data and returns a service object\n     * @returns a new service object with the parsed data\n     */\n    const parseUpdateData = (): Service => {\n      const serviceName = name.value;\n      const serviceDetails = details.value;\n\n      return new Service(getServiceId(), serviceName, serviceDetails);\n    };\n\n    /**\n     * Handles the cancel button click and returns to the service list\n     */\n    const cancelAction = (): void => {\n      router.go(-1);\n    };\n\n    /**\n     * Handles the save button click and returns to the service list\n     */\n    const saveAction = (): void => {\n      // validate data\n      if (!name.value) {\n        window.alert('Digite um nome válido para o serviço.');\n        return;\n      }\n\n      // parse data\n      const newService = parseCreateData();\n\n      // create data\n      serviceService.create(newService).then(() => {\n        // return to service list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the edit button click and returns to the service list\n     */\n    const editAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const editedService = parseUpdateData();\n\n      // update data\n      serviceService.update(editedService).then(() => {\n        // return to service list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the delete button click and returns to the service list\n     */\n    const deleteAction = (): void => {\n      // parse data\n      const serviceId = getServiceId();\n\n      // delete data\n      serviceService.delete(serviceId).then(() => {\n        // return to service list\n        router.go(-1);\n      });\n    };\n\n    // loading information on edit\n    if (props.isEditing) {\n      // getting the service being edited\n      const serviceId = getServiceId();\n      serviceService.get(serviceId).then((service: Service) => {\n        // updating fields\n        name.value = service.name;\n        details.value = service.details;\n      });\n    }\n\n    // expose template variables\n    return {\n      name,\n      details,\n      header,\n      cancelAction,\n      saveAction,\n      editAction,\n      deleteAction\n    };\n  }\n});\n","import { render } from \"./ServiceForm.vue?vue&type=template&id=22ee9924&scoped=true\"\nimport script from \"./ServiceForm.vue?vue&type=script&lang=ts\"\nexport * from \"./ServiceForm.vue?vue&type=script&lang=ts\"\n\nimport \"./ServiceForm.vue?vue&type=style&index=0&id=22ee9924&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-22ee9924\"\n\nexport default script","<template>\n  <div class=\"client-details\">\n    <TitleBar\n      title=\"Meus Clientes\"\n      :icon=\"require('@/assets/img/user-friends-solid.svg')\"\n    />\n    <div class=\"content\">\n      <div class=\"name\">\n        {{ client ? client.name : '' }}\n        <EditCircleButton @click=\"clientEditAction\" />\n      </div>\n      <div class=\"services\">\n        <img src=\"@/assets/img/cut-solid.svg\" alt=\"Services icon\" />\n        Serviços realizados\n      </div>\n      <div class=\"items\">\n        <ServiceItem\n          v-for=\"record in clientRecords\"\n          :key=\"record.id\"\n          :record=\"record\"\n          @click=\"recordItemAction(record.id)\"\n        />\n      </div>\n    </div>\n    <AddCircleButton @click=\"recordAddAction()\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport TitleBar from '@/components/TitleBar.vue';\nimport ServiceItem from '@/components/ServiceItem.vue';\nimport AddCircleButton from '@/components/AddCircleButton.vue';\nimport EditCircleButton from '@/components/EditCircleButton.vue';\nimport Client from '@/model/client.model';\nimport ClientCreate from '@/model/dto/client-create';\nimport Record from '@/model/record.model';\nimport RecordService from '@/services/record-service';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'ClientDetails',\n  components: {\n    TitleBar,\n    ServiceItem,\n    AddCircleButton,\n    EditCircleButton\n  },\n  setup() {\n    const client = ref();\n    const clientRecords = ref();\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const recordService = new RecordService(db, 'records');\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n\n    // getting the id of the client\n    const clientId = parseInt(route.params.id as string, 10);\n\n    // getting the client object and associated records\n    clientService\n      .get(clientId)\n      .then((entity: Client) => {\n        client.value = entity;\n        return recordService.getByClientId(entity.id);\n      })\n      .then((entities: Record[]) => {\n        clientRecords.value = entities;\n      });\n\n    /**\n     * Navigates to the new record screen\n     */\n    const recordAddAction = (): void => {\n      router.push({ name: 'NewRecord', params: { clientId: clientId } });\n    };\n\n    /**\n     * Navigates to the edit record screen\n     */\n    const recordItemAction = (recordId: number): void => {\n      router.push({\n        name: 'EditRecord',\n        params: { clientId: clientId, recordId: recordId }\n      });\n    };\n\n    /**\n     * Navigates to the edition of the client\n     */\n    const clientEditAction = (): void => {\n      router.push({ name: 'EditClient', params: { id: clientId } });\n    };\n\n    // exposed template variables\n    return {\n      client,\n      clientRecords,\n      recordAddAction,\n      recordItemAction,\n      clientEditAction\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.client-details {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  div.content {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    overflow-y: hidden;\n\n    div.name {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      background-color: $app-background-color-white;\n      padding: 1rem 1.25rem 1rem 1rem;\n      font-size: 1.125rem;\n    }\n\n    div.services {\n      display: flex;\n      align-items: center;\n      border-bottom: 1px solid $app-border-color;\n      padding: 0 1.25rem 1rem 1rem;\n      background-color: $app-background-color-white;\n\n      img {\n        height: 1.125rem;\n        margin-right: 0.5rem;\n      }\n    }\n\n    div.items {\n      flex-grow: 1;\n      overflow-y: scroll;\n    }\n  }\n\n  div.add-circle-button {\n    position: fixed;\n    right: 1.375rem;\n    bottom: 1.375rem;\n  }\n}\n</style>\n","<template>\n  <div class=\"service-item\">\n    <div class=\"date\">\n      <div class=\"circle\"></div>\n      {{ computedDate }}\n    </div>\n    <div class=\"service\">\n      {{ record.service }}\n    </div>\n    <div class=\"details\">\n      {{ record.details }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue';\nimport Record from '@/model/record.model.ts';\n\nexport default defineComponent({\n  name: 'ServiceItem',\n  props: {\n    record: {\n      type: Object as PropType<Record>,\n      default: new Record(0, 0, 'Name', new Date(), '00:00', 'Details')\n    }\n  },\n  setup(props) {\n    /**\n     * Converts the date property to a readable string\n     */\n    const computedDate = computed(() => {\n      if (!props.record.date) {\n        return 'Sem informação de data';\n      }\n\n      // getting the year as a string\n      const year = props.record.date.getFullYear().toString();\n\n      // getting the month as a string\n      const rawMonth = (props.record.date.getMonth() + 1).toString();\n      const month = rawMonth.length == 1 ? `0${rawMonth}` : rawMonth;\n\n      // getting the day as a string\n      const rawDay = props.record.date.getDate().toString();\n      const day = rawDay.length == 1 ? `0${rawDay}` : rawDay;\n\n      // getting the hour and minute as a string\n      const hourAndMinute = props.record.time\n        ? props.record.time\n        : 'Sem horário';\n\n      // getting the day of the week\n      const weekDays = ['dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sáb'];\n      const weekDay = weekDays[props.record.date.getDay()];\n\n      // returning formatted date\n      return `${day}/${month}/${year} (${weekDay}) @ ${hourAndMinute}`;\n    });\n\n    // expose template variables\n    return { computedDate };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.service-item {\n  background-color: $app-background-color-white;\n  border-top: 1px solid $app-border-color;\n  padding: 1rem 1.25rem;\n\n  div.date {\n    display: flex;\n    align-items: center;\n    margin-bottom: 0.25rem;\n\n    div.circle {\n      height: 0.5rem;\n      width: 0.5rem;\n      border-radius: 50%;\n      background-color: $app-button-color-primary;\n      margin-right: 0.5rem;\n    }\n  }\n\n  div.service {\n    margin-bottom: 0.25rem;\n  }\n\n  &:hover {\n    cursor: pointer;\n    color: $app-font-color-white;\n    background-color: $app-button-color-alternative-hover;\n\n    div.date div.circle {\n      background-color: $app-background-color-white;\n    }\n  }\n\n  &:active {\n    cursor: pointer;\n    color: $app-font-color-white;\n    background-color: $app-button-color-alternative-active;\n\n    div.date div.circle {\n      background-color: $app-background-color-white;\n    }\n  }\n}\n</style>\n","/**\n * Class that represents the record of a service\n */\nexport default class Record {\n  id: number;\n  clientId: number;\n  service: string;\n  date: Date | null;\n  time: string;\n  details: string;\n\n  /**\n   * Constructor\n   */\n  constructor(\n    id: number,\n    clientId: number,\n    service: string,\n    date: Date | null,\n    time: string,\n    details: string\n  ) {\n    this.id = id;\n    this.clientId = clientId;\n    this.service = service;\n    this.date = date;\n    this.time = time;\n    this.details = details;\n  }\n}\n","\nimport { computed, defineComponent, PropType } from 'vue';\nimport Record from '@/model/record.model.ts';\n\nexport default defineComponent({\n  name: 'ServiceItem',\n  props: {\n    record: {\n      type: Object as PropType<Record>,\n      default: new Record(0, 0, 'Name', new Date(), '00:00', 'Details')\n    }\n  },\n  setup(props) {\n    /**\n     * Converts the date property to a readable string\n     */\n    const computedDate = computed(() => {\n      if (!props.record.date) {\n        return 'Sem informação de data';\n      }\n\n      // getting the year as a string\n      const year = props.record.date.getFullYear().toString();\n\n      // getting the month as a string\n      const rawMonth = (props.record.date.getMonth() + 1).toString();\n      const month = rawMonth.length == 1 ? `0${rawMonth}` : rawMonth;\n\n      // getting the day as a string\n      const rawDay = props.record.date.getDate().toString();\n      const day = rawDay.length == 1 ? `0${rawDay}` : rawDay;\n\n      // getting the hour and minute as a string\n      const hourAndMinute = props.record.time\n        ? props.record.time\n        : 'Sem horário';\n\n      // getting the day of the week\n      const weekDays = ['dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sáb'];\n      const weekDay = weekDays[props.record.date.getDay()];\n\n      // returning formatted date\n      return `${day}/${month}/${year} (${weekDay}) @ ${hourAndMinute}`;\n    });\n\n    // expose template variables\n    return { computedDate };\n  }\n});\n","import { render } from \"./ServiceItem.vue?vue&type=template&id=13c16a9b&scoped=true\"\nimport script from \"./ServiceItem.vue?vue&type=script&lang=ts\"\nexport * from \"./ServiceItem.vue?vue&type=script&lang=ts\"\n\nimport \"./ServiceItem.vue?vue&type=style&index=0&id=13c16a9b&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-13c16a9b\"\n\nexport default script","<template>\n  <div class=\"edit-circle-button\">\n    <img src=\"@/assets/img/pen-solid.svg\" alt=\"Edit icon\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'EditCircleButton'\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.edit-circle-button {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 1.375rem;\n  height: 1.375rem;\n  border-radius: 50%;\n  background-color: $app-button-color-alternative;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.25);\n\n  img {\n    height: 0.625rem;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-color: $app-button-color-alternative-hover;\n  }\n\n  &:active {\n    cursor: pointer;\n    background-color: $app-button-color-alternative-active;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'EditCircleButton'\n});\n","import { render } from \"./EditCircleButton.vue?vue&type=template&id=27f27039&scoped=true\"\nimport script from \"./EditCircleButton.vue?vue&type=script&lang=ts\"\nexport * from \"./EditCircleButton.vue?vue&type=script&lang=ts\"\n\nimport \"./EditCircleButton.vue?vue&type=style&index=0&id=27f27039&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-27f27039\"\n\nexport default script","import Record from '@/model/record.model';\nimport RecordCreate from '@/model/dto/record-create';\nimport GenericService from './shared/generic-service';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport { dbGetAll } from '@/util/idb';\n\nexport default class RecordService extends GenericService<\n  Record,\n  RecordCreate\n> {\n  /**\n   * Constructor\n   */\n  constructor(db: DatabaseConnection, store: string) {\n    // call super\n    super(db, store);\n  }\n\n  /**\n   * Gets all records by client id from the database\n   * @param id the id of the client from where to get the records\n   */\n  async getByClientId(id: number): Promise<Record[]> {\n    const records = await dbGetAll<Record>(this.db, this.store);\n    return records.filter((record: Record) => record.clientId === id);\n  }\n}\n","\nimport { defineComponent, inject, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport TitleBar from '@/components/TitleBar.vue';\nimport ServiceItem from '@/components/ServiceItem.vue';\nimport AddCircleButton from '@/components/AddCircleButton.vue';\nimport EditCircleButton from '@/components/EditCircleButton.vue';\nimport Client from '@/model/client.model';\nimport ClientCreate from '@/model/dto/client-create';\nimport Record from '@/model/record.model';\nimport RecordService from '@/services/record-service';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'ClientDetails',\n  components: {\n    TitleBar,\n    ServiceItem,\n    AddCircleButton,\n    EditCircleButton\n  },\n  setup() {\n    const client = ref();\n    const clientRecords = ref();\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const recordService = new RecordService(db, 'records');\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n\n    // getting the id of the client\n    const clientId = parseInt(route.params.id as string, 10);\n\n    // getting the client object and associated records\n    clientService\n      .get(clientId)\n      .then((entity: Client) => {\n        client.value = entity;\n        return recordService.getByClientId(entity.id);\n      })\n      .then((entities: Record[]) => {\n        clientRecords.value = entities;\n      });\n\n    /**\n     * Navigates to the new record screen\n     */\n    const recordAddAction = (): void => {\n      router.push({ name: 'NewRecord', params: { clientId: clientId } });\n    };\n\n    /**\n     * Navigates to the edit record screen\n     */\n    const recordItemAction = (recordId: number): void => {\n      router.push({\n        name: 'EditRecord',\n        params: { clientId: clientId, recordId: recordId }\n      });\n    };\n\n    /**\n     * Navigates to the edition of the client\n     */\n    const clientEditAction = (): void => {\n      router.push({ name: 'EditClient', params: { id: clientId } });\n    };\n\n    // exposed template variables\n    return {\n      client,\n      clientRecords,\n      recordAddAction,\n      recordItemAction,\n      clientEditAction\n    };\n  }\n});\n","import { render } from \"./ClientDetails.vue?vue&type=template&id=531f7e11&scoped=true\"\nimport script from \"./ClientDetails.vue?vue&type=script&lang=ts\"\nexport * from \"./ClientDetails.vue?vue&type=script&lang=ts\"\n\nimport \"./ClientDetails.vue?vue&type=style&index=0&id=531f7e11&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-531f7e11\"\n\nexport default script","<template>\n  <div class=\"record-form\">\n    <TitleBar\n      title=\"Meus Clientes\"\n      :icon=\"require('@/assets/img/user-friends-solid.svg')\"\n    />\n    <div class=\"content\">\n      <div class=\"header\">\n        {{ header }}\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Cliente\"\n          :src=\"require('@/assets/img/user-friends-solid.svg')\"\n        />\n        <Label hideIcon noPadding :label=\"name\" />\n      </div>\n      <div class=\"input-group\">\n        <Label label=\"Serviço\" :src=\"require('@/assets/img/cut-solid.svg')\" />\n        <InputField\n          placeholder=\"Selecione um serviço...\"\n          v-model=\"service\"\n          disabled\n          hasIcon\n          :icon=\"require('@/assets/img/chevron-down-solid.svg')\"\n          @click=\"serviceSelector.open()\"\n        />\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Data\"\n          :src=\"require('@/assets/img/calendar-day-solid.svg')\"\n        />\n        <InputField\n          placeholder=\"Selecione uma data...\"\n          type=\"date\"\n          v-model=\"date\"\n        />\n      </div>\n      <div class=\"input-group\">\n        <Label label=\"Horário\" :src=\"require('@/assets/img/clock-solid.svg')\" />\n        <InputField\n          placeholder=\"Digite um horário...\"\n          v-model=\"time\"\n          inputMode=\"numeric\"\n          maxLength=\"5\"\n          @update:modelValue=\"maskTimeField()\"\n        />\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Detalhes do serviço\"\n          :src=\"require('@/assets/img/info-circle-solid.svg')\"\n        />\n        <InputField\n          placeholder=\"Digite outras informações do registro...\"\n          v-model=\"details\"\n        />\n      </div>\n      <div class=\"buttons\">\n        <Button\n          v-if=\"!isEditing\"\n          isAlternativeColor\n          label=\"Salvar Registro\"\n          @click=\"saveAction\"\n        />\n        <Button v-if=\"!isEditing\" label=\"Cancelar\" @click=\"cancelAction\" />\n        <Button\n          v-if=\"isEditing\"\n          isAlternativeColor\n          label=\"Salvar Registro\"\n          @click=\"editAction\"\n        />\n        <Button\n          v-if=\"isEditing\"\n          label=\"Excluir Registro\"\n          @click=\"deleteAction\"\n        />\n      </div>\n    </div>\n    <ListSelector\n      ref=\"serviceSelector\"\n      :items=\"services\"\n      @selected=\"handleServiceSelection\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { stringToDate, dateToString, timeToString } from '@/util/date-utils';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport Label from '@/components/Label.vue';\nimport Button from '@/components/Button.vue';\nimport ListSelector from '@/components/ListSelector.vue';\nimport Record from '@/model/record.model.ts';\nimport RecordCreate from '@/model/dto/record-create';\nimport Service from '@/model/service.model';\nimport ServiceCreate from '@/model/dto/service-create';\nimport RecordService from '@/services/record-service';\nimport Client from '@/model/client.model';\nimport ClientCreate from '@/model/dto/client-create';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'RecordForm',\n  components: {\n    TitleBar,\n    InputField,\n    Label,\n    Button,\n    ListSelector\n  },\n  props: {\n    isEditing: { type: Boolean, default: false }\n  },\n  setup(props) {\n    const serviceSelector = ref(null);\n    const services = ref();\n    const name = ref('');\n    const service = ref('');\n    const date = ref('');\n    const time = ref('');\n    const details = ref('');\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const recordService = new RecordService(db, 'records');\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n    const serviceService = new GenericService<Service, ServiceCreate>(\n      db,\n      'services'\n    );\n\n    /**\n     * Returns a computed property depending on the edit mode\n     */\n    const header = computed(() => {\n      return props.isEditing\n        ? 'Editar registro de serviço'\n        : 'Novo registro de serviço';\n    });\n\n    /**\n     * Validates the input data before persisting\n     */\n    const validateData = (): boolean => {\n      if (!service.value) {\n        window.alert('Escolha um serviço válido para o cliente.');\n        return false;\n      }\n      return true;\n    };\n\n    /**\n     * Gets the current client id from the router parameters\n     * @returns the id of the current client\n     */\n    const getClientId = (): number => {\n      return parseInt(route.params.clientId as string, 10);\n    };\n\n    /**\n     * Gets the current record id from the router parameters\n     * @returns the id of the current record\n     */\n    const getRecordId = (): number => {\n      return parseInt(route.params.recordId as string, 10);\n    };\n\n    /**\n     * Parses the record data and returns a record creation DTO\n     * @returns a new record DTO the parsed data\n     */\n    const parseCreateData = (): RecordCreate => {\n      const recordService = service.value;\n      const recordDate = stringToDate(date.value);\n      const recordTime = time.value;\n      const recordDetails = details.value;\n\n      return new RecordCreate(\n        getClientId(),\n        recordService,\n        recordDate,\n        recordTime,\n        recordDetails\n      );\n    };\n\n    /**\n     * Parses the record data and returns a record object\n     * @returns a new record with the parsed data\n     */\n    const parseUpdateData = (): Record => {\n      const recordService = service.value;\n      const recordDate = stringToDate(date.value);\n      const recordTime = time.value;\n      const recordDetails = details.value;\n\n      return new Record(\n        getRecordId(),\n        getClientId(),\n        recordService,\n        recordDate,\n        recordTime,\n        recordDetails\n      );\n    };\n\n    /**\n     * Handles the selected service\n     * @param id the id of the selected service\n     */\n    const handleServiceSelection = (id: number) => {\n      serviceService.get(id).then((entity: Service) => {\n        service.value = entity.name;\n      });\n    };\n\n    /**\n     * Handles the cancel button click and returns to the records list\n     */\n    const cancelAction = (): void => {\n      router.go(-1);\n    };\n\n    /**\n     * Handles the save button click and returns to the records list\n     */\n    const saveAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const newRecord = parseCreateData();\n\n      // create data\n      recordService.create(newRecord).then(() => {\n        // return to records list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the edit button click and returns to the records list\n     */\n    const editAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const editedRecord = parseUpdateData();\n\n      // update data\n      recordService.update(editedRecord).then(() => {\n        // return to records list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the delete button click and returns to the records list\n     */\n    const deleteAction = (): void => {\n      // parse data\n      const recordId = getRecordId();\n\n      // delete data\n      recordService.delete(recordId).then(() => {\n        // return to records list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Masks the time field as the user edits its value\n     */\n    const maskTimeField = (): void => {\n      if (time.value.length < 2) {\n        return;\n      } else if (!time.value.includes(':')) {\n        time.value = time.value + ':';\n      }\n    };\n\n    // load services\n    serviceService.getAll().then((entities: Service[]) => {\n      services.value = entities;\n    });\n\n    // load current client\n    const clientId = getClientId();\n    clientService.get(clientId).then((entity: Client) => {\n      name.value = entity.name;\n    });\n\n    // loading information on creation\n    if (!props.isEditing) {\n      // set default value for date and time\n      const now = new Date();\n      date.value = dateToString(now);\n      time.value = timeToString(now);\n    }\n\n    // loading information on edit\n    else {\n      // getting the client being edited\n      const recordId = getRecordId();\n      recordService.get(recordId).then((record: Record) => {\n        // updating fields\n        service.value = record.service;\n        date.value = dateToString(record.date);\n        time.value = record.time;\n        details.value = record.details;\n      });\n    }\n\n    // expose template variables\n    return {\n      header,\n      name,\n      service,\n      date,\n      time,\n      details,\n      serviceSelector,\n      services,\n      handleServiceSelection,\n      cancelAction,\n      saveAction,\n      editAction,\n      deleteAction,\n      maskTimeField\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\ndiv.record-form {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\ndiv.content {\n  overflow-y: scroll;\n\n  div.header {\n    font-size: 1.125rem;\n    padding: 0 1rem 1rem 1rem;\n  }\n\n  div.input-group {\n    margin-bottom: 1rem;\n  }\n}\n\ndiv.buttons {\n  display: flex;\n  padding: 1rem;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n</style>\n","<template>\n  <teleport to=\"#modal\">\n    <div class=\"list-selector\" :class=\"{ visible: isOpened }\">\n      <div class=\"container\">\n        <div class=\"title\">Selecione um item da lista</div>\n        <div class=\"content\">\n          <ListItem\n            v-for=\"item in items\"\n            :key=\"item.id\"\n            :content=\"item.name\"\n            @click=\"itemAction(item.id)\"\n          />\n        </div>\n        <div class=\"buttons\">\n          <Button label=\"Cancelar\" @click=\"close\" />\n        </div>\n      </div>\n    </div>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref } from 'vue';\nimport SortableListItem from '@/model/interface/sortable-list-item.interface';\nimport ListItem from '@/components/ListItem.vue';\nimport Button from '@/components/Button.vue';\n\nexport default defineComponent({\n  name: 'ListSelector',\n  components: {\n    ListItem,\n    Button\n  },\n  props: {\n    items: { type: Object as PropType<SortableListItem[]>, default: [] }\n  },\n  emits: ['selected'],\n  setup(props, context) {\n    const isOpened = ref(false);\n\n    /**\n     * Opens the list selector\n     */\n    const open = (): void => {\n      isOpened.value = true;\n    };\n\n    /**\n     * Closes the list selector\n     */\n    const close = (): void => {\n      isOpened.value = false;\n    };\n\n    /**\n     * Emits an event containing the selected item id\n     * @param id the id of the clicked item\n     */\n    const itemAction = (id: number): void => {\n      context.emit('selected', id);\n      close();\n    };\n\n    // exposed template variables\n    return { isOpened, open, close, itemAction };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.list-selector {\n  visibility: hidden;\n  opacity: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: $app-background-color-modal;\n  transition: opacity 0.1s ease-in, visibility 0.1s;\n\n  div.container {\n    display: flex;\n    flex-direction: column;\n    background-color: $app-background-color-white;\n    width: 80%;\n    height: 70%;\n    padding: 1rem;\n    border-radius: 0.25rem;\n\n    div.content {\n      margin: 1rem 0;\n      flex-grow: 1;\n      overflow-y: scroll;\n    }\n  }\n\n  &.visible {\n    visibility: visible;\n    opacity: 1;\n  }\n}\n</style>\n","\nimport { defineComponent, PropType, ref } from 'vue';\nimport SortableListItem from '@/model/interface/sortable-list-item.interface';\nimport ListItem from '@/components/ListItem.vue';\nimport Button from '@/components/Button.vue';\n\nexport default defineComponent({\n  name: 'ListSelector',\n  components: {\n    ListItem,\n    Button\n  },\n  props: {\n    items: { type: Object as PropType<SortableListItem[]>, default: [] }\n  },\n  emits: ['selected'],\n  setup(props, context) {\n    const isOpened = ref(false);\n\n    /**\n     * Opens the list selector\n     */\n    const open = (): void => {\n      isOpened.value = true;\n    };\n\n    /**\n     * Closes the list selector\n     */\n    const close = (): void => {\n      isOpened.value = false;\n    };\n\n    /**\n     * Emits an event containing the selected item id\n     * @param id the id of the clicked item\n     */\n    const itemAction = (id: number): void => {\n      context.emit('selected', id);\n      close();\n    };\n\n    // exposed template variables\n    return { isOpened, open, close, itemAction };\n  }\n});\n","import { render } from \"./ListSelector.vue?vue&type=template&id=ad0c6266&scoped=true\"\nimport script from \"./ListSelector.vue?vue&type=script&lang=ts\"\nexport * from \"./ListSelector.vue?vue&type=script&lang=ts\"\n\nimport \"./ListSelector.vue?vue&type=style&index=0&id=ad0c6266&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-ad0c6266\"\n\nexport default script","/**\n * A DTO that represents a request to create a record\n */\nexport default class RecordCreate {\n  clientId: number;\n  service: string;\n  date: Date | null;\n  time: string;\n  details: string;\n\n  /**\n   * Constructor\n   */\n  constructor(\n    clientId: number,\n    service: string,\n    date: Date | null,\n    time: string,\n    details: string\n  ) {\n    this.clientId = clientId;\n    this.service = service;\n    this.date = date;\n    this.time = time;\n    this.details = details;\n  }\n}\n","\nimport { computed, defineComponent, inject, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { stringToDate, dateToString, timeToString } from '@/util/date-utils';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport Label from '@/components/Label.vue';\nimport Button from '@/components/Button.vue';\nimport ListSelector from '@/components/ListSelector.vue';\nimport Record from '@/model/record.model.ts';\nimport RecordCreate from '@/model/dto/record-create';\nimport Service from '@/model/service.model';\nimport ServiceCreate from '@/model/dto/service-create';\nimport RecordService from '@/services/record-service';\nimport Client from '@/model/client.model';\nimport ClientCreate from '@/model/dto/client-create';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'RecordForm',\n  components: {\n    TitleBar,\n    InputField,\n    Label,\n    Button,\n    ListSelector\n  },\n  props: {\n    isEditing: { type: Boolean, default: false }\n  },\n  setup(props) {\n    const serviceSelector = ref(null);\n    const services = ref();\n    const name = ref('');\n    const service = ref('');\n    const date = ref('');\n    const time = ref('');\n    const details = ref('');\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const recordService = new RecordService(db, 'records');\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n    const serviceService = new GenericService<Service, ServiceCreate>(\n      db,\n      'services'\n    );\n\n    /**\n     * Returns a computed property depending on the edit mode\n     */\n    const header = computed(() => {\n      return props.isEditing\n        ? 'Editar registro de serviço'\n        : 'Novo registro de serviço';\n    });\n\n    /**\n     * Validates the input data before persisting\n     */\n    const validateData = (): boolean => {\n      if (!service.value) {\n        window.alert('Escolha um serviço válido para o cliente.');\n        return false;\n      }\n      return true;\n    };\n\n    /**\n     * Gets the current client id from the router parameters\n     * @returns the id of the current client\n     */\n    const getClientId = (): number => {\n      return parseInt(route.params.clientId as string, 10);\n    };\n\n    /**\n     * Gets the current record id from the router parameters\n     * @returns the id of the current record\n     */\n    const getRecordId = (): number => {\n      return parseInt(route.params.recordId as string, 10);\n    };\n\n    /**\n     * Parses the record data and returns a record creation DTO\n     * @returns a new record DTO the parsed data\n     */\n    const parseCreateData = (): RecordCreate => {\n      const recordService = service.value;\n      const recordDate = stringToDate(date.value);\n      const recordTime = time.value;\n      const recordDetails = details.value;\n\n      return new RecordCreate(\n        getClientId(),\n        recordService,\n        recordDate,\n        recordTime,\n        recordDetails\n      );\n    };\n\n    /**\n     * Parses the record data and returns a record object\n     * @returns a new record with the parsed data\n     */\n    const parseUpdateData = (): Record => {\n      const recordService = service.value;\n      const recordDate = stringToDate(date.value);\n      const recordTime = time.value;\n      const recordDetails = details.value;\n\n      return new Record(\n        getRecordId(),\n        getClientId(),\n        recordService,\n        recordDate,\n        recordTime,\n        recordDetails\n      );\n    };\n\n    /**\n     * Handles the selected service\n     * @param id the id of the selected service\n     */\n    const handleServiceSelection = (id: number) => {\n      serviceService.get(id).then((entity: Service) => {\n        service.value = entity.name;\n      });\n    };\n\n    /**\n     * Handles the cancel button click and returns to the records list\n     */\n    const cancelAction = (): void => {\n      router.go(-1);\n    };\n\n    /**\n     * Handles the save button click and returns to the records list\n     */\n    const saveAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const newRecord = parseCreateData();\n\n      // create data\n      recordService.create(newRecord).then(() => {\n        // return to records list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the edit button click and returns to the records list\n     */\n    const editAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const editedRecord = parseUpdateData();\n\n      // update data\n      recordService.update(editedRecord).then(() => {\n        // return to records list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the delete button click and returns to the records list\n     */\n    const deleteAction = (): void => {\n      // parse data\n      const recordId = getRecordId();\n\n      // delete data\n      recordService.delete(recordId).then(() => {\n        // return to records list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Masks the time field as the user edits its value\n     */\n    const maskTimeField = (): void => {\n      if (time.value.length < 2) {\n        return;\n      } else if (!time.value.includes(':')) {\n        time.value = time.value + ':';\n      }\n    };\n\n    // load services\n    serviceService.getAll().then((entities: Service[]) => {\n      services.value = entities;\n    });\n\n    // load current client\n    const clientId = getClientId();\n    clientService.get(clientId).then((entity: Client) => {\n      name.value = entity.name;\n    });\n\n    // loading information on creation\n    if (!props.isEditing) {\n      // set default value for date and time\n      const now = new Date();\n      date.value = dateToString(now);\n      time.value = timeToString(now);\n    }\n\n    // loading information on edit\n    else {\n      // getting the client being edited\n      const recordId = getRecordId();\n      recordService.get(recordId).then((record: Record) => {\n        // updating fields\n        service.value = record.service;\n        date.value = dateToString(record.date);\n        time.value = record.time;\n        details.value = record.details;\n      });\n    }\n\n    // expose template variables\n    return {\n      header,\n      name,\n      service,\n      date,\n      time,\n      details,\n      serviceSelector,\n      services,\n      handleServiceSelection,\n      cancelAction,\n      saveAction,\n      editAction,\n      deleteAction,\n      maskTimeField\n    };\n  }\n});\n","import { render } from \"./RecordForm.vue?vue&type=template&id=6f1a38ee&scoped=true\"\nimport script from \"./RecordForm.vue?vue&type=script&lang=ts\"\nexport * from \"./RecordForm.vue?vue&type=script&lang=ts\"\n\nimport \"./RecordForm.vue?vue&type=style&index=0&id=6f1a38ee&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-6f1a38ee\"\n\nexport default script","import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router';\nimport Home from '../views/Home.vue';\nimport Clients from '../views/Clients.vue';\nimport Services from '../views/Services.vue';\nimport ClientForm from '../views/ClientForm.vue';\nimport ServiceForm from '../views/ServiceForm.vue';\nimport ClientDetails from '../views/ClientDetails.vue';\nimport RecordForm from '../views/RecordForm.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home\n  },\n  {\n    path: '/clients',\n    name: 'Clients',\n    component: Clients\n  },\n  {\n    path: '/services',\n    name: 'Services',\n    component: Services\n  },\n  {\n    path: '/clients/:id',\n    name: 'ClientDetails',\n    component: ClientDetails\n  },\n  {\n    path: '/clients/new',\n    name: 'NewClient',\n    component: ClientForm\n  },\n  {\n    path: '/clients/:clientId/records/new',\n    name: 'NewRecord',\n    component: RecordForm\n  },\n  {\n    path: '/clients/:clientId/records/:recordId',\n    name: 'EditRecord',\n    props: { isEditing: true },\n    component: RecordForm\n  },\n  {\n    path: '/services/new',\n    name: 'NewService',\n    component: ServiceForm\n  },\n  {\n    path: '/clients/:id/edit',\n    name: 'EditClient',\n    props: { isEditing: true },\n    component: ClientForm\n  },\n  {\n    path: '/services/:id/edit',\n    name: 'EditService',\n    props: { isEditing: true },\n    component: ServiceForm\n  }\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\n\nexport default router;\n","import { RouteLocation } from 'vue-router';\nimport router from '../router';\n\n// Defines a global mixin object\nconst mixin = {\n  methods: {\n    navigateTo(route: RouteLocation) {\n      router.push(route);\n    }\n  }\n};\n\nexport default mixin;\n","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport mixin from './util/mixins';\nimport './registerServiceWorker';\n\ncreateApp(App)\n  .use(router)\n  .mixin(mixin)\n  .mount('#app');\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ScrollableList.vue?vue&type=style&index=0&id=17706a74&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ListSelector.vue?vue&type=style&index=0&id=ad0c6266&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ListItem.vue?vue&type=style&index=0&id=7a8c60d5&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/clock-solid.95fe55d9.svg\";","module.exports = __webpack_public_path__ + \"img/plus-solid.7496c38f.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Label.vue?vue&type=style&index=0&id=7fc0a864&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/pen-solid.e203089a.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./AddCircleButton.vue?vue&type=style&index=0&id=07b02b16&lang=scss&scoped=true\""],"sourceRoot":""}