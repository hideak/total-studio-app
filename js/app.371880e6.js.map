{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/img/app-logo.jpg","webpack:///./src/views/ClientDetails.vue?fb0f","webpack:///./src/App.vue?8d5e","webpack:///./src/components/ScrollableList.vue?3fc9","webpack:///./src/components/TitleBar.vue?fb47","webpack:///./src/assets/img/birthday-cake-solid.svg","webpack:///./src/assets/img/cut-solid.svg","webpack:///./src/views/ClientForm.vue?14ed","webpack:///./src/assets/img/plus-circle-solid.svg","webpack:///./src/assets/img/search-solid.svg","webpack:///./src/views/Services.vue?f24f","webpack:///./src/assets/img/minus-circle-solid.svg","webpack:///./src/components/Card.vue?857b","webpack:///./src/assets/img/phone-solid.svg","webpack:///./src/views/Home.vue?df12","webpack:///./src/components/EditCircleButton.vue?721a","webpack:///./src/components/ServiceItem.vue?bdba","webpack:///./src/assets/img/dollar-sign-solid.svg","webpack:///./src/views/RecordForm.vue?a49d","webpack:///./src/assets/img/info-circle-solid.svg","webpack:///./src/assets/img/user-friends-solid.svg","webpack:///./src/views/Clients.vue?dd89","webpack:///./src/components/ServiceSelector.vue?1533","webpack:///./src/assets/img/calendar-day-solid.svg","webpack:///./src/components/Button.vue?85ca","webpack:///./src/App.vue","webpack:///./src/util/migrations.ts","webpack:///./src/util/idb.ts","webpack:///./src/App.vue?1d14","webpack:///./src/App.vue?97f5","webpack:///./src/views/Home.vue","webpack:///./src/components/Card.vue","webpack:///./src/components/Card.vue?6747","webpack:///./src/components/Card.vue?e156","webpack:///./src/views/Home.vue?26af","webpack:///./src/views/Home.vue?c772","webpack:///./src/views/Clients.vue","webpack:///./src/components/ScrollableList.vue","webpack:///./src/components/AddCircleButton.vue","webpack:///./src/components/AddCircleButton.vue?b6df","webpack:///./src/components/AddCircleButton.vue?578d","webpack:///./src/components/ListItem.vue","webpack:///./src/components/ListItem.vue?124e","webpack:///./src/components/ListItem.vue?9017","webpack:///./src/components/TitleBar.vue","webpack:///./src/components/TitleBar.vue?48a7","webpack:///./src/components/TitleBar.vue?8e27","webpack:///./src/components/InputField.vue","webpack:///./src/components/InputField.vue?70c8","webpack:///./src/components/InputField.vue?63fc","webpack:///./src/components/ScrollableList.vue?e5c0","webpack:///./src/components/ScrollableList.vue?8b92","webpack:///./src/services/shared/generic-service.ts","webpack:///./src/views/Clients.vue?90e3","webpack:///./src/views/Clients.vue?d594","webpack:///./src/views/Services.vue","webpack:///./src/views/Services.vue?c6b9","webpack:///./src/views/Services.vue?aee7","webpack:///./src/views/ClientForm.vue","webpack:///./src/util/date-utils.ts","webpack:///./src/components/Label.vue","webpack:///./src/components/Label.vue?b3b6","webpack:///./src/components/Label.vue?739c","webpack:///./src/components/Button.vue","webpack:///./src/components/Button.vue?7b91","webpack:///./src/components/Button.vue?d484","webpack:///./src/model/client.model.ts","webpack:///./src/model/dto/client-create.ts","webpack:///./src/views/ClientForm.vue?15f8","webpack:///./src/views/ClientForm.vue?b7f3","webpack:///./src/views/ServiceForm.vue","webpack:///./src/model/dto/service-create.ts","webpack:///./src/model/service.model.ts","webpack:///./src/views/ServiceForm.vue?8a8d","webpack:///./src/views/ServiceForm.vue?b7c5","webpack:///./src/views/ClientDetails.vue","webpack:///./src/components/ServiceItem.vue","webpack:///./src/model/record.model.ts","webpack:///./src/components/ServiceItem.vue?6821","webpack:///./src/components/ServiceItem.vue?7cd3","webpack:///./src/components/EditCircleButton.vue","webpack:///./src/components/EditCircleButton.vue?992b","webpack:///./src/components/EditCircleButton.vue?5944","webpack:///./src/services/record-service.ts","webpack:///./src/views/ClientDetails.vue?82a0","webpack:///./src/views/ClientDetails.vue?1416","webpack:///./src/views/RecordForm.vue","webpack:///./src/components/ServiceSelector.vue","webpack:///./src/model/service-entry.model.ts","webpack:///./src/components/ServiceSelector.vue?cc66","webpack:///./src/components/ServiceSelector.vue?1f6a","webpack:///./src/model/dto/record-create.ts","webpack:///./src/views/RecordForm.vue?66b4","webpack:///./src/views/RecordForm.vue?7862","webpack:///./src/router/index.ts","webpack:///./src/util/mixins.ts","webpack:///./src/registerServiceWorker.ts","webpack:///./src/main.ts","webpack:///./src/components/InputField.vue?006f","webpack:///./src/components/ListItem.vue?bed5","webpack:///./src/views/ServiceForm.vue?1acf","webpack:///./src/assets/img/map-marked-alt-solid.svg","webpack:///./src/assets/img/clock-solid.svg","webpack:///./src/assets/img/plus-solid.svg","webpack:///./src/components/Label.vue?24fe","webpack:///./src/assets/img/pen-solid.svg","webpack:///./src/components/AddCircleButton.vue?3eab"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","id","Component","migrations","event","db","target","createObjectStore","keyPath","autoIncrement","migrate","migrationIndex","oldVersion","newVersion","indexedDBNotAvailable","dbConnect","dbConnection","Promise","resolve","reject","indexedDB","Error","request","open","dbName","dbVersion","onsuccess","database","onupgradeneeded","onerror","error","dbGet","store","transaction","objectStore","dbGetAll","getAll","dbCreate","add","dbUpdate","put","dbDelete","delete","setup","then","render","class","src","alt","description","navigateTo","props","type","String","default","__scopeId","components","Card","title","icon","items","clients","searchPlaceholder","addAction","clientAddAction","itemAction","clientItemAction","hasIcon","placeholder","searchValue","filteredItems","item","content","sideContent","hasDeleteIcon","deleteAction","isHoverable","Boolean","Function","textAlignCenter","modelValue","disabled","inputmode","inputMode","maxlength","maxLength","inputHandler","emits","context","emit","AddCircleButton","ListItem","TitleBar","InputField","filter","toLowerCase","includes","this","entity","ScrollableList","clientService","entities","params","services","serviceAddAction","serviceItemAction","serviceService","header","label","phone","address","birthday","additionalInfo","isEditing","isAlternativeColor","saveAction","cancelAction","editAction","dateToString","date","year","getFullYear","toString","rawMonth","getMonth","month","rawDay","getDate","day","stringToDate","dateMask","exec","parseInt","Date","timeToString","rawHour","getHours","hour","rawMinute","getMinutes","minute","noPadding","hideIcon","Label","Button","route","validateData","alert","getClientId","parseCreateData","clientName","clientPhone","clientAddress","clientBirthday","clientAdditionalInfo","parseUpdateData","go","newClient","editedClient","update","clientId","client","defaultPrice","details","getServiceId","parseDefaultPrice","pattern","parseFloat","replace","serviceName","serviceDefaultPrice","serviceDetails","newService","editedService","serviceId","service","toFixed","clientEditAction","clientRecords","record","recordItemAction","recordAddAction","computedDate","computedTotal","serviceEntry","price","time","hourAndMinute","weekDays","weekDay","getDay","map","reduce","previous","current","records","ServiceItem","EditCircleButton","recordService","getByClientId","recordId","handleServiceEntryOpen","serviceEntries","handleServiceEntryDelete","total","maskTimeField","ref","handleServiceSelection","to","isOpened","confirm","close","newItemIndex","isNaN","newIndex","ServiceSelector","serviceSelector","getRecordId","recordServices","JSON","parse","stringify","recordDate","recordTime","recordDetails","getNewServiceId","maxValue","Math","max","index","findIndex","newRecord","editedRecord","now","routes","path","component","Home","Clients","Services","ClientDetails","ClientForm","RecordForm","ServiceForm","router","history","mixin","methods","ready","console","log","registered","cached","updatefound","updated","offline","App","use","mount"],"mappings":"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","file":"js/app.371880e6.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"img/app-logo.21597b92.jpg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ClientDetails.vue?vue&type=style&index=0&id=531f7e11&lang=scss&scoped=true\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=6de38bad&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ScrollableList.vue?vue&type=style&index=0&id=67734107&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./TitleBar.vue?vue&type=style&index=0&id=1ef8f422&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/birthday-cake-solid.3565e0ff.svg\";","module.exports = __webpack_public_path__ + \"img/cut-solid.54483259.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ClientForm.vue?vue&type=style&index=0&id=3ea58563&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/plus-circle-solid.cff29527.svg\";","module.exports = __webpack_public_path__ + \"img/search-solid.1ba86ee0.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Services.vue?vue&type=style&index=0&id=82e8b0e2&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/minus-circle-solid.3af80343.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Card.vue?vue&type=style&index=0&id=919d9780&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/phone-solid.381735aa.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Home.vue?vue&type=style&index=0&id=1ba4ea28&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./EditCircleButton.vue?vue&type=style&index=0&id=27f27039&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ServiceItem.vue?vue&type=style&index=0&id=527381d3&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/dollar-sign-solid.7e6631da.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./RecordForm.vue?vue&type=style&index=0&id=9949ab02&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/info-circle-solid.f8b35438.svg\";","module.exports = __webpack_public_path__ + \"img/user-friends-solid.55645753.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Clients.vue?vue&type=style&index=0&id=037b8594&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ServiceSelector.vue?vue&type=style&index=0&id=0852bf94&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/calendar-day-solid.14565641.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Button.vue?vue&type=style&index=0&id=f7b353d6&lang=scss&scoped=true\"","<template>\n  <RouterView v-slot=\"{ Component }\">\n    <Transition name=\"slide-fade\" mode=\"out-in\">\n      <component :is=\"Component\" />\n    </Transition>\n  </RouterView>\n  <div id=\"modal\"></div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, provide } from 'vue';\nimport { dbConnect } from '@/util/idb';\nimport DatabaseConnection from './model/interface/database-connection.interface';\n\nexport default defineComponent({\n  name: 'App',\n  setup() {\n    // Connecting to the Indexed DB\n    const dbConnection: DatabaseConnection = {\n      dbName: 'StudioDB',\n      dbVersion: 1\n    };\n\n    dbConnect(dbConnection).then();\n    provide('dbConnection', dbConnection);\n  }\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/global.scss';\n\ndiv#app {\n  height: 100%;\n}\n</style>\n","/**\n * The list of migrations to be applied to the database\n */\nconst migrations: { (event: IDBVersionChangeEvent): void }[] = [\n  /** Migration to version 1 */\n  (event: IDBVersionChangeEvent) => {\n    // Getting the database\n    const db: IDBDatabase = (event.target as IDBOpenDBRequest).result;\n\n    // Creating basic object stores\n    db.createObjectStore('clients', { keyPath: 'id', autoIncrement: true });\n    db.createObjectStore('services', { keyPath: 'id', autoIncrement: true });\n    db.createObjectStore('records', { keyPath: 'id', autoIncrement: true });\n  }\n];\n\n/**\n * Migrate the database based on the old and new database version values\n * @param event the event associated with the database version change\n */\nfunction migrate(event: IDBVersionChangeEvent) {\n  // Get the current version of the database\n  let migrationIndex = event.oldVersion;\n\n  if (event.newVersion) {\n    while (migrationIndex < event.newVersion) {\n      // Apply the migration\n      migrations[migrationIndex](event);\n\n      // Go to the next version\n      migrationIndex++;\n    }\n  }\n}\n\nexport { migrate };\n","import DatabaseConnection from '@/model/interface/database-connection.interface';\nimport { migrate } from '@/util/migrations';\n\n// Error messages\nconst indexedDBNotAvailable =\n  'Sorry, but the IndexedDB is not available in your browser';\n\n/**\n * Connects to a database by pouplating a Database Connection\n * @param dbConnection Object representing the data used to connect\n */\nasync function dbConnect(\n  dbConnection: DatabaseConnection\n): Promise<DatabaseConnection> {\n  return new Promise((resolve, reject) => {\n    // Check if indexedDB is available in the user's browser\n    if (!window.indexedDB) {\n      reject(new Error(indexedDBNotAvailable));\n    }\n\n    // Connecting to the database\n    const request: IDBOpenDBRequest = window.indexedDB.open(\n      dbConnection.dbName,\n      dbConnection.dbVersion\n    );\n\n    // Success callback\n    request.onsuccess = (event: Event) => {\n      dbConnection.database = (event.target as IDBOpenDBRequest).result;\n      resolve(dbConnection);\n    };\n\n    // Upgrade callback\n    request.onupgradeneeded = (event: IDBVersionChangeEvent) => {\n      migrate(event);\n      dbConnection.database = (event.target as IDBOpenDBRequest).result;\n      resolve(dbConnection);\n    };\n\n    // Error callback\n    request.onerror = (error: Event) => {\n      reject(error);\n    };\n  });\n}\n\n/**\n * Retrieves an item from a store in the database\n * @param db the database to use\n * @param store the store where the data will be retrieved\n * @param key the key of the item to retrieve\n */\nasync function dbGet<T>(\n  db: DatabaseConnection,\n  store: string,\n  key: number\n): Promise<T> {\n  return new Promise((resolve, reject) => {\n    const request = db.database\n      ?.transaction(store)\n      .objectStore(store)\n      .get(key);\n\n    if (request) {\n      // Success callback\n      request.onsuccess = () => {\n        resolve(request.result);\n      };\n\n      // Error callback\n      request.onerror = (error: Event) => {\n        reject(error);\n      };\n    }\n  });\n}\n\n/**\n * Retrieves all items from a store in the database\n * @param db the database to use\n * @param store the store where the data will be retrieved\n */\nasync function dbGetAll<T>(\n  db: DatabaseConnection,\n  store: string\n): Promise<T[]> {\n  return new Promise((resolve, reject) => {\n    const request = db.database\n      ?.transaction(store)\n      .objectStore(store)\n      .getAll();\n\n    if (request) {\n      // Success callback\n      request.onsuccess = () => {\n        resolve(request.result);\n      };\n\n      // Error callback\n      request.onerror = (error: Event) => {\n        reject(error);\n      };\n    }\n  });\n}\n\n/**\n * Creates an item from a store in the database\n * @param db the database to use\n * @param store the store where the data will be created\n * @param object the object that will be created\n */\nasync function dbCreate<T>(\n  db: DatabaseConnection,\n  store: string,\n  object: T\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const request = db.database\n      ?.transaction(store, 'readwrite')\n      .objectStore(store)\n      .add(object);\n\n    if (request) {\n      // Success callback\n      request.onsuccess = () => {\n        resolve();\n      };\n\n      // Error callback\n      request.onerror = (error: Event) => {\n        reject(error);\n      };\n    }\n  });\n}\n\n/**\n * Creates an item from a store in the database\n * @param db the database to use\n * @param store the store where the data will be created\n * @param object the object that will be created\n */\nasync function dbUpdate<T>(\n  db: DatabaseConnection,\n  store: string,\n  object: T\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const request = db.database\n      ?.transaction(store, 'readwrite')\n      .objectStore(store)\n      .put(object);\n\n    if (request) {\n      // Success callback\n      request.onsuccess = () => {\n        resolve();\n      };\n\n      // Error callback\n      request.onerror = (error: Event) => {\n        reject(error);\n      };\n    }\n  });\n}\n\n/**\n * Deletes an item from a store in the database\n * @param db the database to use\n * @param store the store where the data will be retrieved\n * @param key the key of the item to retrieve\n */\nasync function dbDelete<T>(\n  db: DatabaseConnection,\n  store: string,\n  key: number\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const request = db.database\n      ?.transaction(store, 'readwrite')\n      .objectStore(store)\n      .delete(key);\n\n    if (request) {\n      // Success callback\n      request.onsuccess = () => {\n        resolve();\n      };\n\n      // Error callback\n      request.onerror = (error: Event) => {\n        reject(error);\n      };\n    }\n  });\n}\n\nexport { dbConnect, dbGet, dbGetAll, dbCreate, dbUpdate, dbDelete };\n","\nimport { defineComponent, provide } from 'vue';\nimport { dbConnect } from '@/util/idb';\nimport DatabaseConnection from './model/interface/database-connection.interface';\n\nexport default defineComponent({\n  name: 'App',\n  setup() {\n    // Connecting to the Indexed DB\n    const dbConnection: DatabaseConnection = {\n      dbName: 'StudioDB',\n      dbVersion: 1\n    };\n\n    dbConnect(dbConnection).then();\n    provide('dbConnection', dbConnection);\n  }\n});\n","import { render } from \"./App.vue?vue&type=template&id=6de38bad\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=6de38bad&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"home\">\n    <div class=\"header\">\n      <div class=\"title\">Total Studio</div>\n      <div class=\"subtitle\">Salão de Beleza</div>\n    </div>\n    <div class=\"logo\">\n      <img src=\"@/assets/img/app-logo.jpg\" alt=\"Logo do aplicativo\" />\n    </div>\n    <div class=\"instructions\">Selecione uma opção</div>\n    <div class=\"cards\">\n      <Card\n        description=\"Meus Clientes\"\n        @click=\"navigateTo({ name: 'Clients' })\"\n      />\n      <Card\n        description=\"Meus Serviços\"\n        @click=\"navigateTo({ name: 'Services' })\"\n      />\n    </div>\n    <div class=\"footer\">Total Studio v1.01 @ 2021</div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport Card from '@/components/Card.vue';\n\nexport default defineComponent({\n  name: 'Home',\n  components: {\n    Card\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\ndiv.home {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n}\n\ndiv.header {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 2rem 0 2rem 0;\n}\n\ndiv.logo img {\n  height: 6rem;\n  margin-bottom: 2rem;\n}\n\ndiv.title {\n  font-family: $app-font-family-title;\n  font-size: 2.25rem;\n}\n\ndiv.subtitle {\n  font-family: $app-font-family-subtitle;\n  font-size: 1.5rem;\n}\n\ndiv.instructions {\n  margin-bottom: 2rem;\n}\n\ndiv.cards {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  gap: 1.25rem;\n  width: 100%;\n  padding: 0 2rem;\n  box-sizing: border-box;\n  margin-bottom: 2rem;\n}\n</style>\n","<template>\n  <div class=\"card\">\n    {{ description }}\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'Card',\n  props: {\n    description: { type: String, default: 'Card Description' }\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.card {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 3.75rem;\n  padding: 0 2rem;\n  background-color: $app-background-color-white;\n  border-radius: 0.25rem;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.25);\n  font-size: 1.25rem;\n  transition: transform 0.1s ease-in;\n\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.05);\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'Card',\n  props: {\n    description: { type: String, default: 'Card Description' }\n  }\n});\n","import { render } from \"./Card.vue?vue&type=template&id=919d9780&scoped=true\"\nimport script from \"./Card.vue?vue&type=script&lang=ts\"\nexport * from \"./Card.vue?vue&type=script&lang=ts\"\n\nimport \"./Card.vue?vue&type=style&index=0&id=919d9780&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-919d9780\"\n\nexport default script","\nimport { defineComponent } from 'vue';\nimport Card from '@/components/Card.vue';\n\nexport default defineComponent({\n  name: 'Home',\n  components: {\n    Card\n  }\n});\n","import { render } from \"./Home.vue?vue&type=template&id=1ba4ea28&scoped=true\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=1ba4ea28&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1ba4ea28\"\n\nexport default script","<template>\n  <div class=\"clients\">\n    <ScrollableList\n      title=\"Meus Clientes\"\n      :icon=\"require('@/assets/img/user-friends-solid.svg')\"\n      :items=\"clients\"\n      :searchPlaceholder=\"'Pesquisar clientes...'\"\n      :addAction=\"clientAddAction\"\n      :itemAction=\"clientItemAction\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, ref } from 'vue';\nimport ScrollableList from '@/components/ScrollableList.vue';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport ClientCreate from '@/model/dto/client-create';\nimport Client from '@/model/client.model';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'Clients',\n  components: {\n    ScrollableList\n  },\n  setup() {\n    const clients = ref();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n\n    // get client data\n    clientService.getAll().then((entities: Client[]) => {\n      clients.value = entities;\n    });\n\n    /**\n     * Navigates to the new client screen\n     */\n    const clientAddAction = () => router.push({ name: 'NewClient' });\n\n    /**\n     * Navigates to the edit client screen\n     */\n    const clientItemAction = (id: number) =>\n      router.push({ name: 'ClientDetails', params: { id } });\n\n    // expose template variables\n    return { clients, clientAddAction, clientItemAction };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.clients {\n  height: 100%;\n}\n</style>\n","<template>\n  <div class=\"scrollable-list\">\n    <TitleBar :title=\"title\" :icon=\"icon\" />\n    <InputField\n      hasIcon\n      :icon=\"require('@/assets/img/search-solid.svg')\"\n      :placeholder=\"searchPlaceholder\"\n      v-model=\"searchValue\"\n    />\n    <div class=\"items\">\n      <ListItem\n        v-for=\"item in filteredItems\"\n        :key=\"item.id\"\n        :content=\"item.name\"\n        @click=\"itemAction(item.id)\"\n      />\n    </div>\n    <AddCircleButton @click=\"addAction\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, PropType, computed } from 'vue';\nimport AddCircleButton from '@/components/AddCircleButton.vue';\nimport ListItem from '@/components/ListItem.vue';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport SortableListItem from '@/model/interface/sortable-list-item.interface';\n\nexport default defineComponent({\n  name: 'ScrollableList',\n  components: {\n    AddCircleButton,\n    ListItem,\n    TitleBar,\n    InputField\n  },\n  props: {\n    title: { type: String },\n    icon: { type: String },\n    items: { type: Object as PropType<SortableListItem[]>, default: [] },\n    searchPlaceholder: { type: String },\n    addAction: { type: Function },\n    itemAction: { type: Function }\n  },\n  setup(props) {\n    const searchValue = ref('');\n\n    const filteredItems = computed(() => {\n      return props.items.filter((item: SortableListItem) => {\n        return item.name\n          .toLowerCase()\n          .includes(searchValue.value.toLowerCase());\n      });\n    });\n\n    return { searchValue, filteredItems };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.scrollable-list {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\ndiv.items {\n  flex-grow: 1;\n  overflow-y: scroll;\n}\n\ndiv.add-circle-button {\n  position: fixed;\n  right: 1.375rem;\n  bottom: 1.375rem;\n}\n</style>\n","<template>\n  <div class=\"add-circle-button\">\n    <img src=\"@/assets/img/plus-solid.svg\" alt=\"Plus icon\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'AddCircleButton'\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.add-circle-button {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 3.75rem;\n  height: 3.75rem;\n  border-radius: 50%;\n  background-color: $app-button-color-primary;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.25);\n\n  img {\n    height: 1.5625rem;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-color: $app-button-color-primary-hover;\n  }\n\n  &:active {\n    cursor: pointer;\n    background-color: $app-button-color-primary-active;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'AddCircleButton'\n});\n","import { render } from \"./AddCircleButton.vue?vue&type=template&id=07b02b16&scoped=true\"\nimport script from \"./AddCircleButton.vue?vue&type=script&lang=ts\"\nexport * from \"./AddCircleButton.vue?vue&type=script&lang=ts\"\n\nimport \"./AddCircleButton.vue?vue&type=style&index=0&id=07b02b16&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-07b02b16\"\n\nexport default script","<template>\n  <div class=\"list-item\">\n    <div class=\"left-side\">\n      {{ content }}\n    </div>\n    <div class=\"right-side\">\n      <span v-if=\"sideContent\">{{ sideContent }}</span>\n      <img\n        v-if=\"hasDeleteIcon\"\n        src=\"@/assets/img/minus-circle-solid.svg\"\n        alt=\"Remove icon\"\n        @click=\"deleteAction()\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'ListItem',\n  props: {\n    isHoverable: { type: Boolean, default: true },\n    content: { type: String, default: 'List Item' },\n    sideContent: { type: String },\n    hasDeleteIcon: { type: Boolean, default: false },\n    deleteAction: { type: Function }\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.list-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 1.25rem;\n  font-size: 1.125rem;\n  background-color: $app-background-color-white;\n  border-top: 1px solid $app-border-color;\n\n  div.right-side {\n    display: flex;\n    align-items: center;\n    font-family: 'Roboto Condensed Regular';\n\n    img {\n      margin-left: 1rem;\n      height: 1.5rem;\n    }\n  }\n\n  &:hover {\n    cursor: pointer;\n    color: $app-font-color-white;\n    background-color: $app-button-color-alternative-hover;\n  }\n\n  &:active {\n    cursor: pointer;\n    color: $app-font-color-white;\n    background-color: $app-button-color-alternative-active;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'ListItem',\n  props: {\n    isHoverable: { type: Boolean, default: true },\n    content: { type: String, default: 'List Item' },\n    sideContent: { type: String },\n    hasDeleteIcon: { type: Boolean, default: false },\n    deleteAction: { type: Function }\n  }\n});\n","import { render } from \"./ListItem.vue?vue&type=template&id=4a1095c0&scoped=true\"\nimport script from \"./ListItem.vue?vue&type=script&lang=ts\"\nexport * from \"./ListItem.vue?vue&type=script&lang=ts\"\n\nimport \"./ListItem.vue?vue&type=style&index=0&id=4a1095c0&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-4a1095c0\"\n\nexport default script","<template>\n  <div class=\"title-bar\">\n    <img :src=\"icon\" alt=\"Clients icon\" />\n    <span>{{ title }} </span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'TitleBar',\n  props: {\n    title: { type: String, default: 'Title Bar' },\n    icon: { type: String }\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.title-bar {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1.5rem 0 1.5rem 0;\n  font-size: 1.5rem;\n  background-color: $app-background-color;\n\n  img {\n    height: 1.875rem;\n    margin-right: 1rem;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'TitleBar',\n  props: {\n    title: { type: String, default: 'Title Bar' },\n    icon: { type: String }\n  }\n});\n","import { render } from \"./TitleBar.vue?vue&type=template&id=1ef8f422&scoped=true\"\nimport script from \"./TitleBar.vue?vue&type=script&lang=ts\"\nexport * from \"./TitleBar.vue?vue&type=script&lang=ts\"\n\nimport \"./TitleBar.vue?vue&type=style&index=0&id=1ef8f422&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1ef8f422\"\n\nexport default script","<template>\n  <div class=\"input-field\">\n    <input\n      class=\"input-field\"\n      :class=\"{ 'text-align-center': textAlignCenter }\"\n      :type=\"type\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      :disabled=\"disabled\"\n      :inputmode=\"inputMode\"\n      :maxlength=\"maxLength\"\n      @input=\"inputHandler\"\n    />\n    <img v-if=\"hasIcon\" :src=\"icon\" alt=\"Search icon\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'InputField',\n  props: {\n    modelValue: { type: String },\n    type: { type: String, default: 'text' },\n    placeholder: { type: String, default: '' },\n    hasIcon: { type: Boolean, default: false },\n    icon: { type: String },\n    disabled: { type: Boolean, default: false },\n    inputMode: { type: String, default: '' },\n    maxLength: { type: String, default: '' },\n    textAlignCenter: { type: Boolean, default: false }\n  },\n  emits: ['update:modelValue'],\n  setup(props, context) {\n    /**\n     * Handles the input event of the input element\n     * @param event the native event from where to grab the input value\n     */\n    const inputHandler = (event: InputEvent): void => {\n      const value = (event.target as HTMLInputElement).value;\n      context.emit('update:modelValue', value);\n    };\n\n    // expose template variables\n    return { inputHandler };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.input-field {\n  position: relative;\n  display: flex;\n  align-items: center;\n  background-color: $app-background-color-white;\n  border-top: 1px solid $app-border-color;\n  border-bottom: 1px solid $app-border-color;\n\n  input.input-field {\n    flex-grow: 1;\n    padding: 1rem 1.25rem;\n    border: none;\n    font-size: 1.125rem;\n\n    &.text-align-center {\n      text-align: center;\n    }\n\n    &:focus {\n      outline: 2px solid $app-outline-color;\n    }\n  }\n\n  input[type='date'] {\n    -webkit-appearance: none;\n    font-family: 'Roboto Regular';\n    background-color: $app-background-color-white;\n  }\n\n  input:disabled,\n  input[disabled] {\n    background-color: $app-background-color-white;\n  }\n\n  img {\n    position: absolute;\n    right: 0;\n    height: 1.5rem;\n    margin-right: 1.25rem;\n    pointer-events: none;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'InputField',\n  props: {\n    modelValue: { type: String },\n    type: { type: String, default: 'text' },\n    placeholder: { type: String, default: '' },\n    hasIcon: { type: Boolean, default: false },\n    icon: { type: String },\n    disabled: { type: Boolean, default: false },\n    inputMode: { type: String, default: '' },\n    maxLength: { type: String, default: '' },\n    textAlignCenter: { type: Boolean, default: false }\n  },\n  emits: ['update:modelValue'],\n  setup(props, context) {\n    /**\n     * Handles the input event of the input element\n     * @param event the native event from where to grab the input value\n     */\n    const inputHandler = (event: InputEvent): void => {\n      const value = (event.target as HTMLInputElement).value;\n      context.emit('update:modelValue', value);\n    };\n\n    // expose template variables\n    return { inputHandler };\n  }\n});\n","import { render } from \"./InputField.vue?vue&type=template&id=bbe38170&scoped=true\"\nimport script from \"./InputField.vue?vue&type=script&lang=ts\"\nexport * from \"./InputField.vue?vue&type=script&lang=ts\"\n\nimport \"./InputField.vue?vue&type=style&index=0&id=bbe38170&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-bbe38170\"\n\nexport default script","\nimport { defineComponent, ref, PropType, computed } from 'vue';\nimport AddCircleButton from '@/components/AddCircleButton.vue';\nimport ListItem from '@/components/ListItem.vue';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport SortableListItem from '@/model/interface/sortable-list-item.interface';\n\nexport default defineComponent({\n  name: 'ScrollableList',\n  components: {\n    AddCircleButton,\n    ListItem,\n    TitleBar,\n    InputField\n  },\n  props: {\n    title: { type: String },\n    icon: { type: String },\n    items: { type: Object as PropType<SortableListItem[]>, default: [] },\n    searchPlaceholder: { type: String },\n    addAction: { type: Function },\n    itemAction: { type: Function }\n  },\n  setup(props) {\n    const searchValue = ref('');\n\n    const filteredItems = computed(() => {\n      return props.items.filter((item: SortableListItem) => {\n        return item.name\n          .toLowerCase()\n          .includes(searchValue.value.toLowerCase());\n      });\n    });\n\n    return { searchValue, filteredItems };\n  }\n});\n","import { render } from \"./ScrollableList.vue?vue&type=template&id=67734107&scoped=true\"\nimport script from \"./ScrollableList.vue?vue&type=script&lang=ts\"\nexport * from \"./ScrollableList.vue?vue&type=script&lang=ts\"\n\nimport \"./ScrollableList.vue?vue&type=style&index=0&id=67734107&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-67734107\"\n\nexport default script","import ServiceInterface from './service.interface';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport { dbGet, dbGetAll, dbCreate, dbUpdate, dbDelete } from '@/util/idb';\n\nexport default class GenericService<Entity, EntityCreate>\n  implements ServiceInterface<Entity, EntityCreate> {\n  /**\n   * The name of the store from where to get data\n   */\n  store: string;\n\n  /**\n   * The database connection\n   */\n  db: DatabaseConnection;\n\n  /**\n   * Constructor\n   */\n  constructor(db: DatabaseConnection, store: string) {\n    this.db = db;\n    this.store = store;\n  }\n\n  /**\n   * Gets an entity from the database\n   * @param id the id of the entity to get\n   */\n  async get(id: number): Promise<Entity> {\n    return dbGet(this.db, this.store, id).then();\n  }\n\n  /**\n   * Gets all entities from the database\n   */\n  async getAll(): Promise<Entity[]> {\n    return dbGetAll(this.db, this.store).then();\n  }\n\n  /**\n   * Creates an entity in the database\n   * @param entity the entity to be created\n   */\n  async create(entity: EntityCreate): Promise<void> {\n    return dbCreate(this.db, this.store, entity);\n  }\n\n  /**\n   * Updates an entity in the database\n   * @param entity the entity to be updated\n   */\n  async update(entity: Entity): Promise<void> {\n    return dbUpdate(this.db, this.store, entity);\n  }\n\n  /**\n   * Deletes an entity in the database\n   * @param id the id of the entity to be deleted\n   */\n  async delete(id: number): Promise<void> {\n    return dbDelete(this.db, this.store, id);\n  }\n}\n","\nimport { defineComponent, inject, ref } from 'vue';\nimport ScrollableList from '@/components/ScrollableList.vue';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport ClientCreate from '@/model/dto/client-create';\nimport Client from '@/model/client.model';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'Clients',\n  components: {\n    ScrollableList\n  },\n  setup() {\n    const clients = ref();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n\n    // get client data\n    clientService.getAll().then((entities: Client[]) => {\n      clients.value = entities;\n    });\n\n    /**\n     * Navigates to the new client screen\n     */\n    const clientAddAction = () => router.push({ name: 'NewClient' });\n\n    /**\n     * Navigates to the edit client screen\n     */\n    const clientItemAction = (id: number) =>\n      router.push({ name: 'ClientDetails', params: { id } });\n\n    // expose template variables\n    return { clients, clientAddAction, clientItemAction };\n  }\n});\n","import { render } from \"./Clients.vue?vue&type=template&id=037b8594&scoped=true\"\nimport script from \"./Clients.vue?vue&type=script&lang=ts\"\nexport * from \"./Clients.vue?vue&type=script&lang=ts\"\n\nimport \"./Clients.vue?vue&type=style&index=0&id=037b8594&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-037b8594\"\n\nexport default script","<template>\n  <div class=\"services\">\n    <ScrollableList\n      title=\"Meus Serviços\"\n      :icon=\"require('@/assets/img/cut-solid.svg')\"\n      :searchPlaceholder=\"'Pesquisar serviços...'\"\n      :items=\"services\"\n      :addAction=\"serviceAddAction\"\n      :itemAction=\"serviceItemAction\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, ref } from 'vue';\nimport ScrollableList from '@/components/ScrollableList.vue';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport Service from '@/model/service.model';\nimport ServiceCreate from '@/model/dto/service-create';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'Services',\n  components: {\n    ScrollableList\n  },\n  setup() {\n    const services = ref();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const serviceService = new GenericService<Service, ServiceCreate>(\n      db,\n      'services'\n    );\n\n    // get service data\n    serviceService.getAll().then((entities: Service[]) => {\n      services.value = entities;\n    });\n\n    /**\n     * Navigates to the new service screen\n     */\n    const serviceAddAction = () => router.push({ name: 'NewService' });\n\n    /**\n     * Navigates to the edit service screen\n     */\n    const serviceItemAction = (id: number) =>\n      router.push({ name: 'EditService', params: { id } });\n\n    // expose template variables\n    return { services, serviceAddAction, serviceItemAction };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.services {\n  height: 100%;\n}\n</style>\n","\nimport { defineComponent, inject, ref } from 'vue';\nimport ScrollableList from '@/components/ScrollableList.vue';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport Service from '@/model/service.model';\nimport ServiceCreate from '@/model/dto/service-create';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'Services',\n  components: {\n    ScrollableList\n  },\n  setup() {\n    const services = ref();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const serviceService = new GenericService<Service, ServiceCreate>(\n      db,\n      'services'\n    );\n\n    // get service data\n    serviceService.getAll().then((entities: Service[]) => {\n      services.value = entities;\n    });\n\n    /**\n     * Navigates to the new service screen\n     */\n    const serviceAddAction = () => router.push({ name: 'NewService' });\n\n    /**\n     * Navigates to the edit service screen\n     */\n    const serviceItemAction = (id: number) =>\n      router.push({ name: 'EditService', params: { id } });\n\n    // expose template variables\n    return { services, serviceAddAction, serviceItemAction };\n  }\n});\n","import { render } from \"./Services.vue?vue&type=template&id=82e8b0e2&scoped=true\"\nimport script from \"./Services.vue?vue&type=script&lang=ts\"\nexport * from \"./Services.vue?vue&type=script&lang=ts\"\n\nimport \"./Services.vue?vue&type=style&index=0&id=82e8b0e2&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-82e8b0e2\"\n\nexport default script","<template>\n  <div class=\"client-form\">\n    <TitleBar\n      title=\"Meus Clientes\"\n      :icon=\"require('@/assets/img/user-friends-solid.svg')\"\n    />\n    <div class=\"content\">\n      <div class=\"header\">\n        {{ header }}\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Nome\"\n          :src=\"require('@/assets/img/user-friends-solid.svg')\"\n        />\n        <InputField placeholder=\"Digite o nome do cliente...\" v-model=\"name\" />\n      </div>\n      <div class=\"input-group\">\n        <Label label=\"Contato\" :src=\"require('@/assets/img/phone-solid.svg')\" />\n        <InputField\n          placeholder=\"Digite o contato do cliente...\"\n          v-model=\"phone\"\n          type=\"tel\"\n        />\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Endereço\"\n          :src=\"require('@/assets/img/map-marked-alt-solid.svg')\"\n        />\n        <InputField\n          placeholder=\"Digite o endereço do cliente...\"\n          v-model=\"address\"\n        />\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Aniversário\"\n          :src=\"require('@/assets/img/birthday-cake-solid.svg')\"\n        />\n        <InputField\n          placeholder=\"Selecione o aniversário do cliente...\"\n          v-model=\"birthday\"\n          type=\"date\"\n        />\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Outras Informações\"\n          :src=\"require('@/assets/img/info-circle-solid.svg')\"\n        />\n        <InputField\n          placeholder=\"Digite outras informações do cliente...\"\n          v-model=\"additionalInfo\"\n        />\n      </div>\n      <div class=\"buttons\">\n        <Button\n          v-if=\"!isEditing\"\n          isAlternativeColor\n          label=\"Salvar Cliente\"\n          @click=\"saveAction\"\n        />\n        <Button v-if=\"!isEditing\" label=\"Cancelar\" @click=\"cancelAction\" />\n        <Button\n          v-if=\"isEditing\"\n          isAlternativeColor\n          label=\"Salvar Cliente\"\n          @click=\"editAction\"\n        />\n        <Button\n          v-if=\"isEditing\"\n          label=\"Excluir Cliente\"\n          @click=\"deleteAction\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { stringToDate, dateToString } from '@/util/date-utils';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport Label from '@/components/Label.vue';\nimport Button from '@/components/Button.vue';\nimport Client from '@/model/client.model';\nimport ClientCreate from '@/model/dto/client-create';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'ClientForm',\n  components: {\n    TitleBar,\n    InputField,\n    Label,\n    Button\n  },\n  props: {\n    isEditing: { type: Boolean, default: false }\n  },\n  setup(props) {\n    const name = ref('');\n    const phone = ref('');\n    const address = ref('');\n    const birthday = ref('');\n    const additionalInfo = ref('');\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n\n    /**\n     * Returns a computed property depending on the edit mode\n     */\n    const header = computed(() => {\n      return props.isEditing ? 'Editar cliente' : 'Cadastrar novo cliente';\n    });\n\n    /**\n     * Validates the input data before persisting\n     */\n    const validateData = (): boolean => {\n      if (!name.value) {\n        window.alert('Digite um nome válido para o cliente.');\n        return false;\n      }\n      return true;\n    };\n\n    /**\n     * Gets the current client id from the router parameters\n     * @returns the id of the current client\n     */\n    const getClientId = (): number => {\n      return parseInt(route.params.id as string, 10);\n    };\n\n    /**\n     * Parses the client data and returns a client creation DTO\n     * @returns a new client DTO with the parsed data\n     */\n    const parseCreateData = (): ClientCreate => {\n      const clientName = name.value;\n      const clientPhone = phone.value;\n      const clientAddress = address.value;\n      const clientBirthday = stringToDate(birthday.value);\n      const clientAdditionalInfo = additionalInfo.value;\n\n      return new ClientCreate(\n        clientName,\n        clientPhone,\n        clientAddress,\n        clientBirthday,\n        clientAdditionalInfo\n      );\n    };\n\n    /**\n     * Parses the client data and returns a client object\n     * @returns a new client object with the parsed data\n     */\n    const parseUpdateData = (): Client => {\n      const clientName = name.value;\n      const clientPhone = phone.value;\n      const clientAddress = address.value;\n      const clientBirthday = stringToDate(birthday.value);\n      const clientAdditionalInfo = additionalInfo.value;\n\n      return new Client(\n        getClientId(),\n        clientName,\n        clientPhone,\n        clientAddress,\n        clientBirthday,\n        clientAdditionalInfo\n      );\n    };\n\n    /**\n     * Handles the cancel button click and returns to the client list\n     */\n    const cancelAction = (): void => {\n      router.go(-1);\n    };\n\n    /**\n     * Handles the save button click and returns to the client list\n     */\n    const saveAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const newClient = parseCreateData();\n\n      // create data\n      clientService.create(newClient).then(() => {\n        // return to client list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the edit button click and returns to the client list\n     */\n    const editAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const editedClient = parseUpdateData();\n\n      // update data\n      clientService.update(editedClient).then(() => {\n        // return to client list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the delete button click and returns to the client list\n     */\n    const deleteAction = (): void => {\n      // parse data\n      const clientId = getClientId();\n\n      // delete data\n      clientService.delete(clientId).then(() => {\n        // return to client list\n        router.go(-2);\n      });\n    };\n\n    // loading information on edit\n    if (props.isEditing) {\n      // getting the client being edited\n      const clientId = getClientId();\n      clientService.get(clientId).then((client: Client) => {\n        // updating fields\n        name.value = client.name;\n        phone.value = client.phone;\n        address.value = client.address;\n        birthday.value = dateToString(client.birthday);\n        additionalInfo.value = client.additionalInfo;\n      });\n    }\n\n    // expose template variables\n    return {\n      name,\n      phone,\n      address,\n      birthday,\n      additionalInfo,\n      header,\n      cancelAction,\n      saveAction,\n      editAction,\n      deleteAction\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\ndiv.client-form {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\ndiv.content {\n  overflow-y: scroll;\n\n  div.header {\n    font-size: 1.125rem;\n    padding: 0 1rem 1rem 1rem;\n  }\n\n  div.input-group {\n    margin-bottom: 1rem;\n  }\n}\n\ndiv.buttons {\n  display: flex;\n  padding: 1rem;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n</style>\n","/**\n * Returns a date as a string in the YYYY-MM-DD format\n * @param date the date to be converted\n * @returns a string representing the date\n */\nfunction dateToString(date: Date | null): string {\n  // checking if the date is valid\n  if (!date) {\n    return '';\n  }\n\n  // getting the year as a string\n  const year = date.getFullYear().toString();\n\n  // getting the month as a string\n  const rawMonth = (date.getMonth() + 1).toString();\n  const month = rawMonth.length == 1 ? `0${rawMonth}` : rawMonth;\n\n  // getting the day as a string\n  const rawDay = date.getDate().toString();\n  const day = rawDay.length == 1 ? `0${rawDay}` : rawDay;\n\n  // returning formatted date\n  return `${year}-${month}-${day}`;\n}\n\n/**\n * Returns a string in the YYYY-MM-DD format as a Date object\n * @param date the string to be converted\n * @returns a date representing the string\n */\nfunction stringToDate(date: string): Date | null {\n  const dateMask = /(\\d{4})-(\\d{2})-(\\d{2})/;\n  const result = dateMask.exec(date);\n\n  if (result) {\n    const year: number = parseInt(result[1], 10);\n    const month: number = parseInt(result[2], 10);\n    const date: number = parseInt(result[3], 10);\n\n    return new Date(year, month - 1, date);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a date as a string in the HH:MM format\n * @param date the date to be converted\n * @returns a string representing the time\n */\nfunction timeToString(date: Date | null): string {\n  // checking if the date is valid\n  if (!date) {\n    return '';\n  }\n\n  // getting the hour as a string\n  const rawHour = date.getHours().toString();\n  const hour = rawHour.length == 1 ? `0${rawHour}` : rawHour;\n\n  // getting the hour as a string\n  const rawMinute = date.getMinutes().toString();\n  const minute = rawMinute.length == 1 ? `0${rawMinute}` : rawMinute;\n\n  // returning formatted date\n  return `${hour}:${minute}`;\n}\n\nexport { dateToString, stringToDate, timeToString };\n","<template>\n  <div class=\"label\" :class=\"{ 'no-padding': noPadding }\">\n    <img v-if=\"!hideIcon\" :src=\"src\" alt=\"Label icon\" />\n    {{ label }}\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'Label',\n  props: {\n    src: { type: String },\n    hideIcon: { type: Boolean, default: false },\n    noPadding: { type: Boolean, default: false },\n    label: { type: String, default: 'Label' }\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\ndiv.label {\n  display: flex;\n  align-items: center;\n  padding: 0 1.25rem 1rem 1rem;\n\n  &.no-padding {\n    padding-bottom: 0;\n  }\n\n  img {\n    height: 1.125rem;\n    margin-right: 0.5rem;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'Label',\n  props: {\n    src: { type: String },\n    hideIcon: { type: Boolean, default: false },\n    noPadding: { type: Boolean, default: false },\n    label: { type: String, default: 'Label' }\n  }\n});\n","import { render } from \"./Label.vue?vue&type=template&id=7fc0a864&scoped=true\"\nimport script from \"./Label.vue?vue&type=script&lang=ts\"\nexport * from \"./Label.vue?vue&type=script&lang=ts\"\n\nimport \"./Label.vue?vue&type=style&index=0&id=7fc0a864&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-7fc0a864\"\n\nexport default script","<template>\n  <button\n    v-bind:class=\"{ 'alternative-color': isAlternativeColor }\"\n    class=\"button\"\n  >\n    {{ label }}\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'Button',\n  props: {\n    label: { type: String, default: 'Label' },\n    isAlternativeColor: { type: Boolean, default: false }\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\nbutton.button {\n  padding: 1rem 1.5rem;\n  color: $app-font-color-white;\n  background-color: $app-button-color-primary;\n  border-radius: 0.25rem;\n  box-shadow: 0.125rem 0.125rem 0.25rem rgba(0, 0, 0, 0.25);\n  border: none;\n  outline: none;\n  width: 100%;\n  font-size: 1.5rem;\n  font-family: 'Roboto Regular';\n\n  &.alternative-color {\n    background-color: $app-button-color-alternative;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-color: $app-button-color-primary-hover;\n\n    &.alternative-color {\n      background-color: $app-button-color-alternative-hover;\n    }\n  }\n\n  &:active {\n    cursor: pointer;\n    background-color: $app-button-color-primary-active;\n\n    &.alternative-color {\n      background-color: $app-button-color-alternative-active;\n    }\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'Button',\n  props: {\n    label: { type: String, default: 'Label' },\n    isAlternativeColor: { type: Boolean, default: false }\n  }\n});\n","import { render } from \"./Button.vue?vue&type=template&id=f7b353d6&scoped=true\"\nimport script from \"./Button.vue?vue&type=script&lang=ts\"\nexport * from \"./Button.vue?vue&type=script&lang=ts\"\n\nimport \"./Button.vue?vue&type=style&index=0&id=f7b353d6&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-f7b353d6\"\n\nexport default script","import SortableListItem from './interface/sortable-list-item.interface';\n\n/**\n * Class that represents a client\n */\nexport default class Client implements SortableListItem {\n  id: number;\n  name: string;\n  phone: string;\n  address: string;\n  birthday: Date | null;\n  additionalInfo: string;\n\n  /**\n   * Constructor\n   */\n  constructor(\n    id: number,\n    name: string,\n    phone: string,\n    address: string,\n    birthday: Date | null,\n    additionalInfo: string\n  ) {\n    this.id = id;\n    this.name = name;\n    this.phone = phone;\n    this.address = address;\n    this.birthday = birthday;\n    this.additionalInfo = additionalInfo;\n  }\n}\n","/**\n * A DTO that represents a request to create a client\n */\nexport default class ClientCreate {\n  name: string;\n  phone: string;\n  address: string;\n  birthday: Date | null;\n  additionalInfo: string;\n\n  /**\n   * Constructor\n   */\n  constructor(\n    name: string,\n    phone: string,\n    address: string,\n    birthday: Date | null,\n    additionalInfo: string\n  ) {\n    this.name = name;\n    this.phone = phone;\n    this.address = address;\n    this.birthday = birthday;\n    this.additionalInfo = additionalInfo;\n  }\n}\n","\nimport { computed, defineComponent, inject, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { stringToDate, dateToString } from '@/util/date-utils';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport Label from '@/components/Label.vue';\nimport Button from '@/components/Button.vue';\nimport Client from '@/model/client.model';\nimport ClientCreate from '@/model/dto/client-create';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'ClientForm',\n  components: {\n    TitleBar,\n    InputField,\n    Label,\n    Button\n  },\n  props: {\n    isEditing: { type: Boolean, default: false }\n  },\n  setup(props) {\n    const name = ref('');\n    const phone = ref('');\n    const address = ref('');\n    const birthday = ref('');\n    const additionalInfo = ref('');\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n\n    /**\n     * Returns a computed property depending on the edit mode\n     */\n    const header = computed(() => {\n      return props.isEditing ? 'Editar cliente' : 'Cadastrar novo cliente';\n    });\n\n    /**\n     * Validates the input data before persisting\n     */\n    const validateData = (): boolean => {\n      if (!name.value) {\n        window.alert('Digite um nome válido para o cliente.');\n        return false;\n      }\n      return true;\n    };\n\n    /**\n     * Gets the current client id from the router parameters\n     * @returns the id of the current client\n     */\n    const getClientId = (): number => {\n      return parseInt(route.params.id as string, 10);\n    };\n\n    /**\n     * Parses the client data and returns a client creation DTO\n     * @returns a new client DTO with the parsed data\n     */\n    const parseCreateData = (): ClientCreate => {\n      const clientName = name.value;\n      const clientPhone = phone.value;\n      const clientAddress = address.value;\n      const clientBirthday = stringToDate(birthday.value);\n      const clientAdditionalInfo = additionalInfo.value;\n\n      return new ClientCreate(\n        clientName,\n        clientPhone,\n        clientAddress,\n        clientBirthday,\n        clientAdditionalInfo\n      );\n    };\n\n    /**\n     * Parses the client data and returns a client object\n     * @returns a new client object with the parsed data\n     */\n    const parseUpdateData = (): Client => {\n      const clientName = name.value;\n      const clientPhone = phone.value;\n      const clientAddress = address.value;\n      const clientBirthday = stringToDate(birthday.value);\n      const clientAdditionalInfo = additionalInfo.value;\n\n      return new Client(\n        getClientId(),\n        clientName,\n        clientPhone,\n        clientAddress,\n        clientBirthday,\n        clientAdditionalInfo\n      );\n    };\n\n    /**\n     * Handles the cancel button click and returns to the client list\n     */\n    const cancelAction = (): void => {\n      router.go(-1);\n    };\n\n    /**\n     * Handles the save button click and returns to the client list\n     */\n    const saveAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const newClient = parseCreateData();\n\n      // create data\n      clientService.create(newClient).then(() => {\n        // return to client list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the edit button click and returns to the client list\n     */\n    const editAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const editedClient = parseUpdateData();\n\n      // update data\n      clientService.update(editedClient).then(() => {\n        // return to client list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the delete button click and returns to the client list\n     */\n    const deleteAction = (): void => {\n      // parse data\n      const clientId = getClientId();\n\n      // delete data\n      clientService.delete(clientId).then(() => {\n        // return to client list\n        router.go(-2);\n      });\n    };\n\n    // loading information on edit\n    if (props.isEditing) {\n      // getting the client being edited\n      const clientId = getClientId();\n      clientService.get(clientId).then((client: Client) => {\n        // updating fields\n        name.value = client.name;\n        phone.value = client.phone;\n        address.value = client.address;\n        birthday.value = dateToString(client.birthday);\n        additionalInfo.value = client.additionalInfo;\n      });\n    }\n\n    // expose template variables\n    return {\n      name,\n      phone,\n      address,\n      birthday,\n      additionalInfo,\n      header,\n      cancelAction,\n      saveAction,\n      editAction,\n      deleteAction\n    };\n  }\n});\n","import { render } from \"./ClientForm.vue?vue&type=template&id=3ea58563&scoped=true\"\nimport script from \"./ClientForm.vue?vue&type=script&lang=ts\"\nexport * from \"./ClientForm.vue?vue&type=script&lang=ts\"\n\nimport \"./ClientForm.vue?vue&type=style&index=0&id=3ea58563&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-3ea58563\"\n\nexport default script","<template>\n  <div class=\"service-form\">\n    <TitleBar\n      title=\"Meus Serviços\"\n      :icon=\"require('@/assets/img/cut-solid.svg')\"\n    />\n    <div class=\"content\">\n      <div class=\"header\">\n        {{ header }}\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Nome do serviço\"\n          :src=\"require('@/assets/img/cut-solid.svg')\"\n        />\n        <InputField placeholder=\"Digite o nome do serviço...\" v-model=\"name\" />\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Preço Padrão\"\n          :src=\"require('@/assets/img/dollar-sign-solid.svg')\"\n        />\n        <InputField\n          placeholder=\"Digite o preço do serviço...\"\n          inputmode=\"numeric\"\n          v-model=\"defaultPrice\"\n        />\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Outras Informações\"\n          :src=\"require('@/assets/img/info-circle-solid.svg')\"\n        />\n        <InputField\n          placeholder=\"Digite outras informações do serviço...\"\n          v-model=\"details\"\n        />\n      </div>\n      <div class=\"buttons\">\n        <Button\n          v-if=\"!isEditing\"\n          isAlternativeColor\n          label=\"Salvar Serviço\"\n          @click=\"saveAction\"\n        />\n        <Button v-if=\"!isEditing\" label=\"Cancelar\" @click=\"cancelAction\" />\n        <Button\n          v-if=\"isEditing\"\n          isAlternativeColor\n          label=\"Salvar Serviço\"\n          @click=\"editAction\"\n        />\n        <Button\n          v-if=\"isEditing\"\n          label=\"Excluir Serviço\"\n          @click=\"deleteAction\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport Label from '@/components/Label.vue';\nimport Button from '@/components/Button.vue';\nimport ServiceCreate from '@/model/dto/service-create';\nimport GenericService from '@/services/shared/generic-service';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport Service from '@/model/service.model';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'ServiceForm',\n  components: {\n    TitleBar,\n    InputField,\n    Label,\n    Button\n  },\n  props: {\n    isEditing: { type: Boolean, default: false }\n  },\n  setup(props) {\n    const name = ref('');\n    const defaultPrice = ref('');\n    const details = ref('');\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const serviceService = new GenericService<Service, ServiceCreate>(\n      db,\n      'services'\n    );\n\n    /**\n     * Returns a computed property depending on the edit mode\n     */\n    const header = computed(() => {\n      return props.isEditing ? 'Editar serviço' : 'Cadastrar novo serviço';\n    });\n\n    /**\n     * Validates the input data before persisting\n     */\n    const validateData = (): boolean => {\n      if (!name.value) {\n        window.alert('Digite um nome válido para o serviço.');\n        return false;\n      }\n      return true;\n    };\n\n    /**\n     * Gets the current service id from the router parameters\n     * @returns the id of the current service\n     */\n    const getServiceId = (): number => {\n      return parseInt(route.params.id as string, 10);\n    };\n\n    /**\n     * Parses the price and return it as a number, or null if it is unparsable\n     * @return the price as a string, or null if it is unparsable\n     */\n    const parseDefaultPrice = (defaultPrice: string): number | null => {\n      const pattern = /\\d*[.|,]\\d+/;\n      const result = pattern.exec(defaultPrice);\n      if (result) {\n        return parseFloat(result[0].replace(',', '.'));\n      } else {\n        return null;\n      }\n    };\n\n    /**\n     * Parses the service data and returns a service creation DTO\n     * @returns a new service DTO the parsed data\n     */\n    const parseCreateData = (): ServiceCreate => {\n      const serviceName = name.value;\n      const serviceDefaultPrice = parseDefaultPrice(defaultPrice.value);\n      const serviceDetails = details.value;\n\n      return new ServiceCreate(\n        serviceName,\n        serviceDefaultPrice,\n        serviceDetails\n      );\n    };\n\n    /**\n     * Parses the service data and returns a service object\n     * @returns a new service object with the parsed data\n     */\n    const parseUpdateData = (): Service => {\n      const serviceName = name.value;\n      const serviceDefaultPrice = parseDefaultPrice(defaultPrice.value);\n      const serviceDetails = details.value;\n\n      return new Service(\n        getServiceId(),\n        serviceName,\n        serviceDefaultPrice,\n        serviceDetails\n      );\n    };\n\n    /**\n     * Handles the cancel button click and returns to the service list\n     */\n    const cancelAction = (): void => {\n      router.go(-1);\n    };\n\n    /**\n     * Handles the save button click and returns to the service list\n     */\n    const saveAction = (): void => {\n      // validate data\n      if (!name.value) {\n        window.alert('Digite um nome válido para o serviço.');\n        return;\n      }\n\n      // parse data\n      const newService = parseCreateData();\n\n      // create data\n      serviceService.create(newService).then(() => {\n        // return to service list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the edit button click and returns to the service list\n     */\n    const editAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const editedService = parseUpdateData();\n\n      // update data\n      serviceService.update(editedService).then(() => {\n        // return to service list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the delete button click and returns to the service list\n     */\n    const deleteAction = (): void => {\n      // parse data\n      const serviceId = getServiceId();\n\n      // delete data\n      serviceService.delete(serviceId).then(() => {\n        // return to service list\n        router.go(-1);\n      });\n    };\n\n    // loading information on edit\n    if (props.isEditing) {\n      // getting the service being edited\n      const serviceId = getServiceId();\n      serviceService.get(serviceId).then((service: Service) => {\n        // updating fields\n        name.value = service.name;\n        defaultPrice.value = service.defaultPrice\n          ? `R$ ${service.defaultPrice.toFixed(2).replace('.', ',')}`\n          : '';\n        details.value = service.details;\n      });\n    }\n\n    // expose template variables\n    return {\n      name,\n      defaultPrice,\n      details,\n      header,\n      cancelAction,\n      saveAction,\n      editAction,\n      deleteAction\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\ndiv.service-form {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\ndiv.content {\n  overflow-y: scroll;\n\n  div.header {\n    font-size: 1.125rem;\n    padding: 0 1rem 1rem 1rem;\n  }\n\n  div.input-group {\n    margin-bottom: 1rem;\n  }\n}\n\ndiv.buttons {\n  display: flex;\n  padding: 1rem;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n</style>\n","/**\n * A DTO that represents a request to create a service\n */\nexport default class ServiceCreate {\n  name: string;\n  defaultPrice: number | null;\n  details: string;\n\n  /**\n   * Constructor\n   */\n  constructor(name: string, defaultPrice: number | null, details: string) {\n    this.name = name;\n    this.defaultPrice = defaultPrice;\n    this.details = details;\n  }\n}\n","import SortableListItem from './interface/sortable-list-item.interface';\n\n/**\n * Class that represents the a service provided\n */\nexport default class Service implements SortableListItem {\n  id: number;\n  name: string;\n  defaultPrice: number | null;\n  details: string;\n\n  /**\n   * Constructor\n   */\n  constructor(\n    id: number,\n    name: string,\n    defaultPrice: number | null,\n    details: string\n  ) {\n    this.id = id;\n    this.name = name;\n    this.defaultPrice = defaultPrice;\n    this.details = details;\n  }\n}\n","\nimport { computed, defineComponent, inject, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport Label from '@/components/Label.vue';\nimport Button from '@/components/Button.vue';\nimport ServiceCreate from '@/model/dto/service-create';\nimport GenericService from '@/services/shared/generic-service';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport Service from '@/model/service.model';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'ServiceForm',\n  components: {\n    TitleBar,\n    InputField,\n    Label,\n    Button\n  },\n  props: {\n    isEditing: { type: Boolean, default: false }\n  },\n  setup(props) {\n    const name = ref('');\n    const defaultPrice = ref('');\n    const details = ref('');\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const serviceService = new GenericService<Service, ServiceCreate>(\n      db,\n      'services'\n    );\n\n    /**\n     * Returns a computed property depending on the edit mode\n     */\n    const header = computed(() => {\n      return props.isEditing ? 'Editar serviço' : 'Cadastrar novo serviço';\n    });\n\n    /**\n     * Validates the input data before persisting\n     */\n    const validateData = (): boolean => {\n      if (!name.value) {\n        window.alert('Digite um nome válido para o serviço.');\n        return false;\n      }\n      return true;\n    };\n\n    /**\n     * Gets the current service id from the router parameters\n     * @returns the id of the current service\n     */\n    const getServiceId = (): number => {\n      return parseInt(route.params.id as string, 10);\n    };\n\n    /**\n     * Parses the price and return it as a number, or null if it is unparsable\n     * @return the price as a string, or null if it is unparsable\n     */\n    const parseDefaultPrice = (defaultPrice: string): number | null => {\n      const pattern = /\\d*[.|,]\\d+/;\n      const result = pattern.exec(defaultPrice);\n      if (result) {\n        return parseFloat(result[0].replace(',', '.'));\n      } else {\n        return null;\n      }\n    };\n\n    /**\n     * Parses the service data and returns a service creation DTO\n     * @returns a new service DTO the parsed data\n     */\n    const parseCreateData = (): ServiceCreate => {\n      const serviceName = name.value;\n      const serviceDefaultPrice = parseDefaultPrice(defaultPrice.value);\n      const serviceDetails = details.value;\n\n      return new ServiceCreate(\n        serviceName,\n        serviceDefaultPrice,\n        serviceDetails\n      );\n    };\n\n    /**\n     * Parses the service data and returns a service object\n     * @returns a new service object with the parsed data\n     */\n    const parseUpdateData = (): Service => {\n      const serviceName = name.value;\n      const serviceDefaultPrice = parseDefaultPrice(defaultPrice.value);\n      const serviceDetails = details.value;\n\n      return new Service(\n        getServiceId(),\n        serviceName,\n        serviceDefaultPrice,\n        serviceDetails\n      );\n    };\n\n    /**\n     * Handles the cancel button click and returns to the service list\n     */\n    const cancelAction = (): void => {\n      router.go(-1);\n    };\n\n    /**\n     * Handles the save button click and returns to the service list\n     */\n    const saveAction = (): void => {\n      // validate data\n      if (!name.value) {\n        window.alert('Digite um nome válido para o serviço.');\n        return;\n      }\n\n      // parse data\n      const newService = parseCreateData();\n\n      // create data\n      serviceService.create(newService).then(() => {\n        // return to service list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the edit button click and returns to the service list\n     */\n    const editAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const editedService = parseUpdateData();\n\n      // update data\n      serviceService.update(editedService).then(() => {\n        // return to service list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the delete button click and returns to the service list\n     */\n    const deleteAction = (): void => {\n      // parse data\n      const serviceId = getServiceId();\n\n      // delete data\n      serviceService.delete(serviceId).then(() => {\n        // return to service list\n        router.go(-1);\n      });\n    };\n\n    // loading information on edit\n    if (props.isEditing) {\n      // getting the service being edited\n      const serviceId = getServiceId();\n      serviceService.get(serviceId).then((service: Service) => {\n        // updating fields\n        name.value = service.name;\n        defaultPrice.value = service.defaultPrice\n          ? `R$ ${service.defaultPrice.toFixed(2).replace('.', ',')}`\n          : '';\n        details.value = service.details;\n      });\n    }\n\n    // expose template variables\n    return {\n      name,\n      defaultPrice,\n      details,\n      header,\n      cancelAction,\n      saveAction,\n      editAction,\n      deleteAction\n    };\n  }\n});\n","import { render } from \"./ServiceForm.vue?vue&type=template&id=4762df30&scoped=true\"\nimport script from \"./ServiceForm.vue?vue&type=script&lang=ts\"\nexport * from \"./ServiceForm.vue?vue&type=script&lang=ts\"\n\nimport \"./ServiceForm.vue?vue&type=style&index=0&id=4762df30&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-4762df30\"\n\nexport default script","<template>\n  <div class=\"client-details\">\n    <TitleBar\n      title=\"Meus Clientes\"\n      :icon=\"require('@/assets/img/user-friends-solid.svg')\"\n    />\n    <div class=\"content\">\n      <div class=\"name\">\n        {{ client ? client.name : '' }}\n        <EditCircleButton @click=\"clientEditAction\" />\n      </div>\n      <div class=\"services\">\n        <img src=\"@/assets/img/cut-solid.svg\" alt=\"Services icon\" />\n        Serviços realizados\n      </div>\n      <div class=\"items\">\n        <ServiceItem\n          v-for=\"record in clientRecords\"\n          :key=\"record.id\"\n          :record=\"record\"\n          @click=\"recordItemAction(record.id)\"\n        />\n      </div>\n    </div>\n    <AddCircleButton @click=\"recordAddAction()\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport TitleBar from '@/components/TitleBar.vue';\nimport ServiceItem from '@/components/ServiceItem.vue';\nimport AddCircleButton from '@/components/AddCircleButton.vue';\nimport EditCircleButton from '@/components/EditCircleButton.vue';\nimport Client from '@/model/client.model';\nimport ClientCreate from '@/model/dto/client-create';\nimport Record from '@/model/record.model';\nimport RecordService from '@/services/record-service';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'ClientDetails',\n  components: {\n    TitleBar,\n    ServiceItem,\n    AddCircleButton,\n    EditCircleButton\n  },\n  setup() {\n    const client = ref();\n    const clientRecords = ref();\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const recordService = new RecordService(db, 'records');\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n\n    // getting the id of the client\n    const clientId = parseInt(route.params.id as string, 10);\n\n    // getting the client object and associated records\n    clientService\n      .get(clientId)\n      .then((entity: Client) => {\n        client.value = entity;\n        return recordService.getByClientId(entity.id);\n      })\n      .then((entities: Record[]) => {\n        clientRecords.value = entities;\n      });\n\n    /**\n     * Navigates to the new record screen\n     */\n    const recordAddAction = (): void => {\n      router.push({ name: 'NewRecord', params: { clientId: clientId } });\n    };\n\n    /**\n     * Navigates to the edit record screen\n     */\n    const recordItemAction = (recordId: number): void => {\n      router.push({\n        name: 'EditRecord',\n        params: { clientId: clientId, recordId: recordId }\n      });\n    };\n\n    /**\n     * Navigates to the edition of the client\n     */\n    const clientEditAction = (): void => {\n      router.push({ name: 'EditClient', params: { id: clientId } });\n    };\n\n    // exposed template variables\n    return {\n      client,\n      clientRecords,\n      recordAddAction,\n      recordItemAction,\n      clientEditAction\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.client-details {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  div.content {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    overflow-y: hidden;\n\n    div.name {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      background-color: $app-background-color-white;\n      padding: 1rem 1.25rem 1rem 1rem;\n      font-size: 1.125rem;\n    }\n\n    div.services {\n      display: flex;\n      align-items: center;\n      border-bottom: 1px solid $app-border-color;\n      padding: 0 1.25rem 1rem 1rem;\n      background-color: $app-background-color-white;\n\n      img {\n        height: 1.125rem;\n        margin-right: 0.5rem;\n      }\n    }\n\n    div.items {\n      flex-grow: 1;\n      overflow-y: scroll;\n    }\n  }\n\n  div.add-circle-button {\n    position: fixed;\n    right: 1.375rem;\n    bottom: 1.375rem;\n  }\n}\n</style>\n","<template>\n  <div class=\"service-item\">\n    <div class=\"top\">\n      <div class=\"left\">\n        <div class=\"circle\"></div>\n        {{ computedDate }}\n      </div>\n      <div class=\"right\">\n        {{ computedTotal }}\n      </div>\n    </div>\n    <div class=\"services\">\n      <div\n        v-for=\"serviceEntry of record.services\"\n        :key=\"serviceEntry.id\"\n        class=\"service\"\n      >\n        <div class=\"left\">\n          {{ serviceEntry.name }}\n        </div>\n        <div class=\"right\">\n          {{ `R$ ${serviceEntry.price.toFixed(2).replace('.', ',')}` }}\n        </div>\n      </div>\n    </div>\n    <div v-if=\"record.details\" class=\"details\">\n      {{ record.details }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue';\nimport Record from '@/model/record.model.ts';\nimport ServiceEntry from '@/model/service-entry.model';\n\nexport default defineComponent({\n  name: 'ServiceItem',\n  props: {\n    record: {\n      type: Object as PropType<Record>,\n      default: new Record(0, 0, [], new Date(), '00:00', 'Details')\n    }\n  },\n  setup(props) {\n    /**\n     * Converts the date property to a readable string\n     */\n    const computedDate = computed(() => {\n      if (!props.record.date) {\n        return 'Sem informação de data';\n      }\n\n      // getting the year as a string\n      const year = props.record.date.getFullYear().toString();\n\n      // getting the month as a string\n      const rawMonth = (props.record.date.getMonth() + 1).toString();\n      const month = rawMonth.length == 1 ? `0${rawMonth}` : rawMonth;\n\n      // getting the day as a string\n      const rawDay = props.record.date.getDate().toString();\n      const day = rawDay.length == 1 ? `0${rawDay}` : rawDay;\n\n      // getting the hour and minute as a string\n      const hourAndMinute = props.record.time\n        ? props.record.time\n        : 'Sem horário';\n\n      // getting the day of the week\n      const weekDays = ['dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sáb'];\n      const weekDay = weekDays[props.record.date.getDay()];\n\n      // returning formatted date\n      return `${day}/${month}/${year} (${weekDay}) às ${hourAndMinute}`;\n    });\n\n    /**\n     * Computes the total price of the service entries\n     */\n    const computedTotal = computed(() => {\n      const result = props.record.services\n        .map((serviceEntry: ServiceEntry) => serviceEntry.price)\n        .reduce((previous, current) => previous + current, 0);\n      return `R$ ${result.toFixed(2).replace('.', ',')}`;\n    });\n\n    // expose template variables\n    return { computedDate, computedTotal };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.service-item {\n  background-color: $app-background-color-white;\n  border-top: 1px solid $app-border-color;\n  padding: 1rem 1.25rem;\n\n  div.top {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 0.5rem;\n\n    div.left {\n      display: flex;\n      align-items: center;\n\n      div.circle {\n        height: 0.5rem;\n        width: 0.5rem;\n        border-radius: 50%;\n        background-color: $app-button-color-primary;\n        margin-right: 0.5rem;\n      }\n    }\n\n    div.right {\n      font-family: 'Roboto Condensed Regular';\n      font-weight: bold;\n    }\n  }\n\n  div.services {\n    display: flex;\n    flex-direction: column;\n    gap: 0.25rem;\n\n    div.service {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n\n      div.right {\n        font-family: 'Roboto Condensed Regular';\n      }\n    }\n  }\n\n  div.details {\n    margin-top: 0.5rem;\n    color: $app-font-color-faded;\n  }\n\n  &:hover {\n    cursor: pointer;\n    color: $app-font-color-white;\n    background-color: $app-button-color-alternative-hover;\n\n    div.details {\n      color: $app-font-color-white;\n    }\n\n    div.top div.left div.circle {\n      background-color: $app-background-color-white;\n    }\n  }\n\n  &:active {\n    cursor: pointer;\n    color: $app-font-color-white;\n    background-color: $app-button-color-alternative-active;\n\n    div.details {\n      color: $app-font-color-white;\n    }\n\n    div.top div.left div.circle {\n      background-color: $app-background-color-white;\n    }\n  }\n}\n</style>\n","import ServiceEntry from './service-entry.model';\n\n/**\n * Class that represents the record of a service\n */\nexport default class Record {\n  id: number;\n  clientId: number;\n  services: ServiceEntry[];\n  date: Date | null;\n  time: string;\n  details: string;\n\n  /**\n   * Constructor\n   */\n  constructor(\n    id: number,\n    clientId: number,\n    services: ServiceEntry[],\n    date: Date | null,\n    time: string,\n    details: string\n  ) {\n    this.id = id;\n    this.clientId = clientId;\n    this.services = services;\n    this.date = date;\n    this.time = time;\n    this.details = details;\n  }\n}\n","\nimport { computed, defineComponent, PropType } from 'vue';\nimport Record from '@/model/record.model.ts';\nimport ServiceEntry from '@/model/service-entry.model';\n\nexport default defineComponent({\n  name: 'ServiceItem',\n  props: {\n    record: {\n      type: Object as PropType<Record>,\n      default: new Record(0, 0, [], new Date(), '00:00', 'Details')\n    }\n  },\n  setup(props) {\n    /**\n     * Converts the date property to a readable string\n     */\n    const computedDate = computed(() => {\n      if (!props.record.date) {\n        return 'Sem informação de data';\n      }\n\n      // getting the year as a string\n      const year = props.record.date.getFullYear().toString();\n\n      // getting the month as a string\n      const rawMonth = (props.record.date.getMonth() + 1).toString();\n      const month = rawMonth.length == 1 ? `0${rawMonth}` : rawMonth;\n\n      // getting the day as a string\n      const rawDay = props.record.date.getDate().toString();\n      const day = rawDay.length == 1 ? `0${rawDay}` : rawDay;\n\n      // getting the hour and minute as a string\n      const hourAndMinute = props.record.time\n        ? props.record.time\n        : 'Sem horário';\n\n      // getting the day of the week\n      const weekDays = ['dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sáb'];\n      const weekDay = weekDays[props.record.date.getDay()];\n\n      // returning formatted date\n      return `${day}/${month}/${year} (${weekDay}) às ${hourAndMinute}`;\n    });\n\n    /**\n     * Computes the total price of the service entries\n     */\n    const computedTotal = computed(() => {\n      const result = props.record.services\n        .map((serviceEntry: ServiceEntry) => serviceEntry.price)\n        .reduce((previous, current) => previous + current, 0);\n      return `R$ ${result.toFixed(2).replace('.', ',')}`;\n    });\n\n    // expose template variables\n    return { computedDate, computedTotal };\n  }\n});\n","import { render } from \"./ServiceItem.vue?vue&type=template&id=527381d3&scoped=true\"\nimport script from \"./ServiceItem.vue?vue&type=script&lang=ts\"\nexport * from \"./ServiceItem.vue?vue&type=script&lang=ts\"\n\nimport \"./ServiceItem.vue?vue&type=style&index=0&id=527381d3&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-527381d3\"\n\nexport default script","<template>\n  <div class=\"edit-circle-button\">\n    <img src=\"@/assets/img/pen-solid.svg\" alt=\"Edit icon\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'EditCircleButton'\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.edit-circle-button {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 1.375rem;\n  height: 1.375rem;\n  border-radius: 50%;\n  background-color: $app-button-color-alternative;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.25);\n\n  img {\n    height: 0.625rem;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-color: $app-button-color-alternative-hover;\n  }\n\n  &:active {\n    cursor: pointer;\n    background-color: $app-button-color-alternative-active;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'EditCircleButton'\n});\n","import { render } from \"./EditCircleButton.vue?vue&type=template&id=27f27039&scoped=true\"\nimport script from \"./EditCircleButton.vue?vue&type=script&lang=ts\"\nexport * from \"./EditCircleButton.vue?vue&type=script&lang=ts\"\n\nimport \"./EditCircleButton.vue?vue&type=style&index=0&id=27f27039&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-27f27039\"\n\nexport default script","import Record from '@/model/record.model';\nimport RecordCreate from '@/model/dto/record-create';\nimport GenericService from './shared/generic-service';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport { dbGetAll } from '@/util/idb';\n\nexport default class RecordService extends GenericService<\n  Record,\n  RecordCreate\n> {\n  /**\n   * Constructor\n   */\n  constructor(db: DatabaseConnection, store: string) {\n    // call super\n    super(db, store);\n  }\n\n  /**\n   * Gets all records by client id from the database\n   * @param id the id of the client from where to get the records\n   */\n  async getByClientId(id: number): Promise<Record[]> {\n    const records = await dbGetAll<Record>(this.db, this.store);\n    return records.filter((record: Record) => record.clientId === id);\n  }\n}\n","\nimport { defineComponent, inject, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport TitleBar from '@/components/TitleBar.vue';\nimport ServiceItem from '@/components/ServiceItem.vue';\nimport AddCircleButton from '@/components/AddCircleButton.vue';\nimport EditCircleButton from '@/components/EditCircleButton.vue';\nimport Client from '@/model/client.model';\nimport ClientCreate from '@/model/dto/client-create';\nimport Record from '@/model/record.model';\nimport RecordService from '@/services/record-service';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'ClientDetails',\n  components: {\n    TitleBar,\n    ServiceItem,\n    AddCircleButton,\n    EditCircleButton\n  },\n  setup() {\n    const client = ref();\n    const clientRecords = ref();\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const recordService = new RecordService(db, 'records');\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n\n    // getting the id of the client\n    const clientId = parseInt(route.params.id as string, 10);\n\n    // getting the client object and associated records\n    clientService\n      .get(clientId)\n      .then((entity: Client) => {\n        client.value = entity;\n        return recordService.getByClientId(entity.id);\n      })\n      .then((entities: Record[]) => {\n        clientRecords.value = entities;\n      });\n\n    /**\n     * Navigates to the new record screen\n     */\n    const recordAddAction = (): void => {\n      router.push({ name: 'NewRecord', params: { clientId: clientId } });\n    };\n\n    /**\n     * Navigates to the edit record screen\n     */\n    const recordItemAction = (recordId: number): void => {\n      router.push({\n        name: 'EditRecord',\n        params: { clientId: clientId, recordId: recordId }\n      });\n    };\n\n    /**\n     * Navigates to the edition of the client\n     */\n    const clientEditAction = (): void => {\n      router.push({ name: 'EditClient', params: { id: clientId } });\n    };\n\n    // exposed template variables\n    return {\n      client,\n      clientRecords,\n      recordAddAction,\n      recordItemAction,\n      clientEditAction\n    };\n  }\n});\n","import { render } from \"./ClientDetails.vue?vue&type=template&id=531f7e11&scoped=true\"\nimport script from \"./ClientDetails.vue?vue&type=script&lang=ts\"\nexport * from \"./ClientDetails.vue?vue&type=script&lang=ts\"\n\nimport \"./ClientDetails.vue?vue&type=style&index=0&id=531f7e11&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-531f7e11\"\n\nexport default script","<template>\n  <div class=\"record-form\">\n    <TitleBar\n      title=\"Meus Clientes\"\n      :icon=\"require('@/assets/img/user-friends-solid.svg')\"\n    />\n    <div class=\"content\">\n      <div class=\"header\">\n        {{ header }}\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Cliente\"\n          :src=\"require('@/assets/img/user-friends-solid.svg')\"\n        />\n        <Label hideIcon noPadding :label=\"name\" />\n      </div>\n      <div class=\"input-group\">\n        <Label label=\"Serviço\" :src=\"require('@/assets/img/cut-solid.svg')\" />\n        <InputField\n          placeholder=\"Adicionar Serviço\"\n          disabled\n          hasIcon\n          :icon=\"require('@/assets/img/plus-circle-solid.svg')\"\n          @click=\"handleServiceEntryOpen\"\n        />\n        <ListItem\n          v-for=\"serviceEntry in serviceEntries\"\n          :key=\"serviceEntry.id\"\n          :content=\"serviceEntry.name\"\n          :sideContent=\"`R$ ${serviceEntry.price.toFixed(2).replace('.', ',')}`\"\n          :deleteAction=\"() => handleServiceEntryDelete(serviceEntry.id)\"\n          hasDeleteIcon\n        />\n        <ListItem content=\"Total (R$)\" :sideContent=\"total\" />\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Data\"\n          :src=\"require('@/assets/img/calendar-day-solid.svg')\"\n        />\n        <InputField\n          placeholder=\"Selecione uma data...\"\n          type=\"date\"\n          v-model=\"date\"\n        />\n      </div>\n      <div class=\"input-group\">\n        <Label label=\"Horário\" :src=\"require('@/assets/img/clock-solid.svg')\" />\n        <InputField\n          placeholder=\"Digite um horário...\"\n          v-model=\"time\"\n          inputMode=\"numeric\"\n          maxLength=\"5\"\n          @update:modelValue=\"maskTimeField()\"\n        />\n      </div>\n      <div class=\"input-group\">\n        <Label\n          label=\"Detalhes do serviço\"\n          :src=\"require('@/assets/img/info-circle-solid.svg')\"\n        />\n        <InputField\n          placeholder=\"Digite outras informações do registro...\"\n          v-model=\"details\"\n        />\n      </div>\n      <div class=\"buttons\">\n        <Button\n          v-if=\"!isEditing\"\n          isAlternativeColor\n          label=\"Salvar Registro\"\n          @click=\"saveAction\"\n        />\n        <Button v-if=\"!isEditing\" label=\"Cancelar\" @click=\"cancelAction\" />\n        <Button\n          v-if=\"isEditing\"\n          isAlternativeColor\n          label=\"Salvar Registro\"\n          @click=\"editAction\"\n        />\n        <Button\n          v-if=\"isEditing\"\n          label=\"Excluir Registro\"\n          @click=\"deleteAction\"\n        />\n      </div>\n    </div>\n    <ServiceSelector\n      ref=\"serviceSelector\"\n      :items=\"services\"\n      @selected=\"handleServiceSelection\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, Ref, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { stringToDate, dateToString, timeToString } from '@/util/date-utils';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport Label from '@/components/Label.vue';\nimport Button from '@/components/Button.vue';\nimport ServiceSelector from '@/components/ServiceSelector.vue';\nimport ListItem from '@/components/ListItem.vue';\nimport Record from '@/model/record.model';\nimport RecordCreate from '@/model/dto/record-create';\nimport Service from '@/model/service.model';\nimport ServiceCreate from '@/model/dto/service-create';\nimport RecordService from '@/services/record-service';\nimport Client from '@/model/client.model';\nimport ClientCreate from '@/model/dto/client-create';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport ServiceEntry from '@/model/service-entry.model';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'RecordForm',\n  components: {\n    TitleBar,\n    InputField,\n    Label,\n    Button,\n    ServiceSelector,\n    ListItem\n  },\n  props: {\n    isEditing: { type: Boolean, default: false }\n  },\n  setup(props) {\n    const serviceSelector = ref();\n    const services = ref();\n    const name = ref('');\n    const serviceEntries: Ref<ServiceEntry[]> = ref([]);\n    const date = ref('');\n    const time = ref('');\n    const details = ref('');\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const recordService = new RecordService(db, 'records');\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n    const serviceService = new GenericService<Service, ServiceCreate>(\n      db,\n      'services'\n    );\n\n    /**\n     * Returns a computed property depending on the edit mode\n     */\n    const header = computed(() => {\n      return props.isEditing\n        ? 'Editar registro de serviço'\n        : 'Novo registro de serviço';\n    });\n\n    /**\n     * Returns the computed total price of all the service entries\n     */\n    const total = computed(() => {\n      const result = serviceEntries.value\n        .map((serviceEntry: ServiceEntry) => serviceEntry.price)\n        .reduce((previous, current) => previous + current, 0);\n      return `R$ ${result.toFixed(2).replace('.', ',')}`;\n    });\n\n    /**\n     * Validates the input data before persisting\n     */\n    const validateData = (): boolean => {\n      if (serviceEntries.value.length === 0) {\n        window.alert('Adicione pelo menos um serviço válido para o cliente.');\n        return false;\n      }\n      return true;\n    };\n\n    /**\n     * Gets the current client id from the router parameters\n     * @returns the id of the current client\n     */\n    const getClientId = (): number => {\n      return parseInt(route.params.clientId as string, 10);\n    };\n\n    /**\n     * Gets the current record id from the router parameters\n     * @returns the id of the current record\n     */\n    const getRecordId = (): number => {\n      return parseInt(route.params.recordId as string, 10);\n    };\n\n    /**\n     * Parses the record data and returns a record creation DTO\n     * @returns a new record DTO the parsed data\n     */\n    const parseCreateData = (): RecordCreate => {\n      const recordServices = JSON.parse(\n        JSON.stringify(serviceEntries.value)\n      ) as ServiceEntry[];\n      const recordDate = stringToDate(date.value);\n      const recordTime = time.value;\n      const recordDetails = details.value;\n\n      return new RecordCreate(\n        getClientId(),\n        recordServices,\n        recordDate,\n        recordTime,\n        recordDetails\n      );\n    };\n\n    /**\n     * Parses the record data and returns a record object\n     * @returns a new record with the parsed data\n     */\n    const parseUpdateData = (): Record => {\n      const recordServices = JSON.parse(\n        JSON.stringify(serviceEntries.value)\n      ) as ServiceEntry[];\n      const recordDate = stringToDate(date.value);\n      const recordTime = time.value;\n      const recordDetails = details.value;\n\n      return new Record(\n        getRecordId(),\n        getClientId(),\n        recordServices,\n        recordDate,\n        recordTime,\n        recordDetails\n      );\n    };\n\n    /**\n     * Gets the value of the id of a possible new service entry to be added\n     * @returns the desired id to be attached to a new service entry\n     */\n    const getNewServiceId = (): number => {\n      const maxValue = Math.max(\n        ...serviceEntries.value.map(\n          (serviceEntry: ServiceEntry) => serviceEntry.id\n        )\n      );\n      return maxValue === Math.max() ? 1 : maxValue + 1;\n    };\n\n    /**\n     * Handles the open operation of the service selector\n     */\n    const handleServiceEntryOpen = (): void => {\n      serviceSelector.value.open(getNewServiceId());\n    };\n\n    /**\n     * Handles the selected service\n     * @param id the id of the selected service\n     */\n    const handleServiceSelection = (serviceEntry: ServiceEntry): void => {\n      serviceEntries.value.push(serviceEntry);\n    };\n\n    /**\n     * Handles the deletion of a service entry\n     * @param id the id of the service entry to delete\n     */\n    const handleServiceEntryDelete = (id: number) => {\n      const index = serviceEntries.value.findIndex(\n        (serviceEntry: ServiceEntry) => {\n          return serviceEntry.id === id;\n        }\n      );\n      serviceEntries.value.splice(index, 1);\n    };\n\n    /**\n     * Handles the cancel button click and returns to the records list\n     */\n    const cancelAction = (): void => {\n      router.go(-1);\n    };\n\n    /**\n     * Handles the save button click and returns to the records list\n     */\n    const saveAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const newRecord = parseCreateData();\n\n      // create data\n      recordService.create(newRecord).then(() => {\n        // return to records list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the edit button click and returns to the records list\n     */\n    const editAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const editedRecord = parseUpdateData();\n\n      // update data\n      recordService.update(editedRecord).then(() => {\n        // return to records list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the delete button click and returns to the records list\n     */\n    const deleteAction = (): void => {\n      // parse data\n      const recordId = getRecordId();\n\n      // delete data\n      recordService.delete(recordId).then(() => {\n        // return to records list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Masks the time field as the user edits its value\n     */\n    const maskTimeField = (): void => {\n      if (time.value.length < 2) {\n        return;\n      } else if (!time.value.includes(':')) {\n        time.value = time.value + ':';\n      }\n    };\n\n    // load services\n    serviceService.getAll().then((entities: Service[]) => {\n      services.value = entities;\n    });\n\n    // load current client\n    const clientId = getClientId();\n    clientService.get(clientId).then((entity: Client) => {\n      name.value = entity.name;\n    });\n\n    // loading information on creation\n    if (!props.isEditing) {\n      // set default value for date and time\n      const now = new Date();\n      date.value = dateToString(now);\n      time.value = timeToString(now);\n    }\n\n    // loading information on edit\n    else {\n      // getting the client being edited\n      const recordId = getRecordId();\n      recordService.get(recordId).then((record: Record) => {\n        // updating fields\n        serviceEntries.value = record.services;\n        date.value = dateToString(record.date);\n        time.value = record.time;\n        details.value = record.details;\n      });\n    }\n\n    // expose template variables\n    return {\n      header,\n      name,\n      serviceEntries,\n      date,\n      time,\n      details,\n      serviceSelector,\n      services,\n      total,\n      handleServiceEntryOpen,\n      handleServiceSelection,\n      handleServiceEntryDelete,\n      cancelAction,\n      saveAction,\n      editAction,\n      deleteAction,\n      maskTimeField\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\ndiv.record-form {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\ndiv.content {\n  overflow-y: scroll;\n\n  div.header {\n    font-size: 1.125rem;\n    padding: 0 1rem 1rem 1rem;\n  }\n\n  div.input-group {\n    margin-bottom: 1rem;\n  }\n}\n\ndiv.buttons {\n  display: flex;\n  padding: 1rem;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n</style>\n","<template>\n  <teleport to=\"#modal\">\n    <div class=\"service-selector\" :class=\"{ visible: isOpened }\">\n      <div class=\"container\">\n        <div class=\"title\">Selecione ou digite um serviço</div>\n        <div class=\"content\">\n          <ListItem\n            v-for=\"item in items\"\n            :key=\"item.id\"\n            :content=\"item.name\"\n            @click=\"itemAction(item)\"\n          />\n        </div>\n        <div class=\"footer\">\n          <div class=\"service-inputs\">\n            <InputField\n              textAlignCenter\n              placeholder=\"Nome do serviço\"\n              v-model=\"service\"\n            />\n            <InputField\n              textAlignCenter\n              placeholder=\"Valor do serviço\"\n              type=\"number\"\n              v-model=\"price\"\n            />\n          </div>\n          <Button isAlternativeColor label=\"Confirmar\" @click=\"confirm\" />\n          <Button label=\"Cancelar\" @click=\"close\" />\n        </div>\n      </div>\n    </div>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref } from 'vue';\nimport SortableListItem from '@/model/interface/sortable-list-item.interface';\nimport ListItem from '@/components/ListItem.vue';\nimport InputField from '@/components/InputField.vue';\nimport Button from '@/components/Button.vue';\nimport ServiceEntry from '@/model/service-entry.model';\nimport Service from '@/model/service.model';\n\nexport default defineComponent({\n  name: 'ServiceSelector',\n  components: {\n    ListItem,\n    InputField,\n    Button\n  },\n  props: {\n    items: { type: Object as PropType<SortableListItem[]>, default: [] }\n  },\n  emits: ['selected'],\n  setup(props, context) {\n    const newItemIndex = ref(0);\n    const service = ref('');\n    const price = ref('');\n    const isOpened = ref(false);\n\n    /**\n     * Validates the input data before completing the request\n     */\n    const validateData = (): boolean => {\n      if (!service.value) {\n        window.alert('Selecione ou digite um nome para o serviço prestado.');\n        return false;\n      } else if (!price.value) {\n        window.alert('Adicione um preço para o serviço prestado.');\n        return false;\n      } else if (isNaN(parseFloat(price.value.replace(',', '.')))) {\n        window.alert('O valor digitado para o preço não é válido.');\n        return false;\n      }\n      return true;\n    };\n\n    /**\n     * Opens the list selector\n     */\n    const open = (newIndex: number): void => {\n      service.value = '';\n      price.value = '';\n      newItemIndex.value = newIndex;\n      isOpened.value = true;\n    };\n\n    /**\n     * Closes the list selector\n     */\n    const close = (): void => {\n      isOpened.value = false;\n    };\n\n    /**\n     * Confirm the specification of the service\n     */\n    const confirm = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // create a new service entry\n      const serviceEntry = new ServiceEntry(\n        newItemIndex.value,\n        service.value,\n        parseFloat(price.value.replace(',', '.'))\n      );\n\n      // emit the service entry\n      context.emit('selected', serviceEntry);\n      close();\n    };\n\n    /**\n     * Emits an event containing the selected item id\n     * @param id the id of the clicked item\n     */\n    const itemAction = (item: Service): void => {\n      service.value = item.name;\n      if (item.defaultPrice) {\n        price.value = `${item.defaultPrice.toFixed(2)}`;\n      } else {\n        price.value = '';\n      }\n    };\n\n    // exposed template variables\n    return { service, price, isOpened, open, close, confirm, itemAction };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/variables.scss';\n\ndiv.service-selector {\n  visibility: hidden;\n  opacity: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: $app-background-color-modal;\n  transition: opacity 0.1s ease-in, visibility 0.1s;\n\n  div.container {\n    display: flex;\n    flex-direction: column;\n    background-color: $app-background-color-white;\n    width: 80%;\n    height: 90%;\n    padding: 1rem;\n    border-radius: 0.25rem;\n\n    div.title {\n      text-align: center;\n    }\n\n    div.content {\n      margin: 1rem 0;\n      flex-grow: 1;\n      overflow-y: scroll;\n    }\n\n    div.footer {\n      display: flex;\n      flex-direction: column;\n      gap: 1rem;\n\n      div.service-inputs {\n        display: flex;\n        flex-direction: column;\n        margin: 0 0.125rem;\n      }\n    }\n  }\n\n  &.visible {\n    visibility: visible;\n    opacity: 1;\n  }\n}\n</style>\n","import SortableListItem from './interface/sortable-list-item.interface';\n\n/**\n * Class that represents the a service that were provided to a client\n */\nexport default class ServiceEntry implements SortableListItem {\n  id: number;\n  name: string;\n  price: number;\n\n  /**\n   * Constructor\n   */\n  constructor(id: number, name: string, price: number) {\n    this.id = id;\n    this.name = name;\n    this.price = price;\n  }\n}\n","\nimport { defineComponent, PropType, ref } from 'vue';\nimport SortableListItem from '@/model/interface/sortable-list-item.interface';\nimport ListItem from '@/components/ListItem.vue';\nimport InputField from '@/components/InputField.vue';\nimport Button from '@/components/Button.vue';\nimport ServiceEntry from '@/model/service-entry.model';\nimport Service from '@/model/service.model';\n\nexport default defineComponent({\n  name: 'ServiceSelector',\n  components: {\n    ListItem,\n    InputField,\n    Button\n  },\n  props: {\n    items: { type: Object as PropType<SortableListItem[]>, default: [] }\n  },\n  emits: ['selected'],\n  setup(props, context) {\n    const newItemIndex = ref(0);\n    const service = ref('');\n    const price = ref('');\n    const isOpened = ref(false);\n\n    /**\n     * Validates the input data before completing the request\n     */\n    const validateData = (): boolean => {\n      if (!service.value) {\n        window.alert('Selecione ou digite um nome para o serviço prestado.');\n        return false;\n      } else if (!price.value) {\n        window.alert('Adicione um preço para o serviço prestado.');\n        return false;\n      } else if (isNaN(parseFloat(price.value.replace(',', '.')))) {\n        window.alert('O valor digitado para o preço não é válido.');\n        return false;\n      }\n      return true;\n    };\n\n    /**\n     * Opens the list selector\n     */\n    const open = (newIndex: number): void => {\n      service.value = '';\n      price.value = '';\n      newItemIndex.value = newIndex;\n      isOpened.value = true;\n    };\n\n    /**\n     * Closes the list selector\n     */\n    const close = (): void => {\n      isOpened.value = false;\n    };\n\n    /**\n     * Confirm the specification of the service\n     */\n    const confirm = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // create a new service entry\n      const serviceEntry = new ServiceEntry(\n        newItemIndex.value,\n        service.value,\n        parseFloat(price.value.replace(',', '.'))\n      );\n\n      // emit the service entry\n      context.emit('selected', serviceEntry);\n      close();\n    };\n\n    /**\n     * Emits an event containing the selected item id\n     * @param id the id of the clicked item\n     */\n    const itemAction = (item: Service): void => {\n      service.value = item.name;\n      if (item.defaultPrice) {\n        price.value = `${item.defaultPrice.toFixed(2)}`;\n      } else {\n        price.value = '';\n      }\n    };\n\n    // exposed template variables\n    return { service, price, isOpened, open, close, confirm, itemAction };\n  }\n});\n","import { render } from \"./ServiceSelector.vue?vue&type=template&id=0852bf94&scoped=true\"\nimport script from \"./ServiceSelector.vue?vue&type=script&lang=ts\"\nexport * from \"./ServiceSelector.vue?vue&type=script&lang=ts\"\n\nimport \"./ServiceSelector.vue?vue&type=style&index=0&id=0852bf94&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-0852bf94\"\n\nexport default script","import ServiceEntry from '../service-entry.model';\n\n/**\n * A DTO that represents a request to create a record\n */\nexport default class RecordCreate {\n  clientId: number;\n  services: ServiceEntry[];\n  date: Date | null;\n  time: string;\n  details: string;\n\n  /**\n   * Constructor\n   */\n  constructor(\n    clientId: number,\n    services: ServiceEntry[],\n    date: Date | null,\n    time: string,\n    details: string\n  ) {\n    this.clientId = clientId;\n    this.services = services;\n    this.date = date;\n    this.time = time;\n    this.details = details;\n  }\n}\n","\nimport { computed, defineComponent, inject, Ref, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { stringToDate, dateToString, timeToString } from '@/util/date-utils';\nimport TitleBar from '@/components/TitleBar.vue';\nimport InputField from '@/components/InputField.vue';\nimport Label from '@/components/Label.vue';\nimport Button from '@/components/Button.vue';\nimport ServiceSelector from '@/components/ServiceSelector.vue';\nimport ListItem from '@/components/ListItem.vue';\nimport Record from '@/model/record.model';\nimport RecordCreate from '@/model/dto/record-create';\nimport Service from '@/model/service.model';\nimport ServiceCreate from '@/model/dto/service-create';\nimport RecordService from '@/services/record-service';\nimport Client from '@/model/client.model';\nimport ClientCreate from '@/model/dto/client-create';\nimport DatabaseConnection from '@/model/interface/database-connection.interface';\nimport GenericService from '@/services/shared/generic-service';\nimport ServiceEntry from '@/model/service-entry.model';\nimport router from '@/router';\n\nexport default defineComponent({\n  name: 'RecordForm',\n  components: {\n    TitleBar,\n    InputField,\n    Label,\n    Button,\n    ServiceSelector,\n    ListItem\n  },\n  props: {\n    isEditing: { type: Boolean, default: false }\n  },\n  setup(props) {\n    const serviceSelector = ref();\n    const services = ref();\n    const name = ref('');\n    const serviceEntries: Ref<ServiceEntry[]> = ref([]);\n    const date = ref('');\n    const time = ref('');\n    const details = ref('');\n    const route = useRoute();\n\n    // initializing database\n    const db: DatabaseConnection = inject('dbConnection') as DatabaseConnection;\n    const recordService = new RecordService(db, 'records');\n    const clientService = new GenericService<Client, ClientCreate>(\n      db,\n      'clients'\n    );\n    const serviceService = new GenericService<Service, ServiceCreate>(\n      db,\n      'services'\n    );\n\n    /**\n     * Returns a computed property depending on the edit mode\n     */\n    const header = computed(() => {\n      return props.isEditing\n        ? 'Editar registro de serviço'\n        : 'Novo registro de serviço';\n    });\n\n    /**\n     * Returns the computed total price of all the service entries\n     */\n    const total = computed(() => {\n      const result = serviceEntries.value\n        .map((serviceEntry: ServiceEntry) => serviceEntry.price)\n        .reduce((previous, current) => previous + current, 0);\n      return `R$ ${result.toFixed(2).replace('.', ',')}`;\n    });\n\n    /**\n     * Validates the input data before persisting\n     */\n    const validateData = (): boolean => {\n      if (serviceEntries.value.length === 0) {\n        window.alert('Adicione pelo menos um serviço válido para o cliente.');\n        return false;\n      }\n      return true;\n    };\n\n    /**\n     * Gets the current client id from the router parameters\n     * @returns the id of the current client\n     */\n    const getClientId = (): number => {\n      return parseInt(route.params.clientId as string, 10);\n    };\n\n    /**\n     * Gets the current record id from the router parameters\n     * @returns the id of the current record\n     */\n    const getRecordId = (): number => {\n      return parseInt(route.params.recordId as string, 10);\n    };\n\n    /**\n     * Parses the record data and returns a record creation DTO\n     * @returns a new record DTO the parsed data\n     */\n    const parseCreateData = (): RecordCreate => {\n      const recordServices = JSON.parse(\n        JSON.stringify(serviceEntries.value)\n      ) as ServiceEntry[];\n      const recordDate = stringToDate(date.value);\n      const recordTime = time.value;\n      const recordDetails = details.value;\n\n      return new RecordCreate(\n        getClientId(),\n        recordServices,\n        recordDate,\n        recordTime,\n        recordDetails\n      );\n    };\n\n    /**\n     * Parses the record data and returns a record object\n     * @returns a new record with the parsed data\n     */\n    const parseUpdateData = (): Record => {\n      const recordServices = JSON.parse(\n        JSON.stringify(serviceEntries.value)\n      ) as ServiceEntry[];\n      const recordDate = stringToDate(date.value);\n      const recordTime = time.value;\n      const recordDetails = details.value;\n\n      return new Record(\n        getRecordId(),\n        getClientId(),\n        recordServices,\n        recordDate,\n        recordTime,\n        recordDetails\n      );\n    };\n\n    /**\n     * Gets the value of the id of a possible new service entry to be added\n     * @returns the desired id to be attached to a new service entry\n     */\n    const getNewServiceId = (): number => {\n      const maxValue = Math.max(\n        ...serviceEntries.value.map(\n          (serviceEntry: ServiceEntry) => serviceEntry.id\n        )\n      );\n      return maxValue === Math.max() ? 1 : maxValue + 1;\n    };\n\n    /**\n     * Handles the open operation of the service selector\n     */\n    const handleServiceEntryOpen = (): void => {\n      serviceSelector.value.open(getNewServiceId());\n    };\n\n    /**\n     * Handles the selected service\n     * @param id the id of the selected service\n     */\n    const handleServiceSelection = (serviceEntry: ServiceEntry): void => {\n      serviceEntries.value.push(serviceEntry);\n    };\n\n    /**\n     * Handles the deletion of a service entry\n     * @param id the id of the service entry to delete\n     */\n    const handleServiceEntryDelete = (id: number) => {\n      const index = serviceEntries.value.findIndex(\n        (serviceEntry: ServiceEntry) => {\n          return serviceEntry.id === id;\n        }\n      );\n      serviceEntries.value.splice(index, 1);\n    };\n\n    /**\n     * Handles the cancel button click and returns to the records list\n     */\n    const cancelAction = (): void => {\n      router.go(-1);\n    };\n\n    /**\n     * Handles the save button click and returns to the records list\n     */\n    const saveAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const newRecord = parseCreateData();\n\n      // create data\n      recordService.create(newRecord).then(() => {\n        // return to records list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the edit button click and returns to the records list\n     */\n    const editAction = (): void => {\n      // validate data\n      if (!validateData()) {\n        return;\n      }\n\n      // parse data\n      const editedRecord = parseUpdateData();\n\n      // update data\n      recordService.update(editedRecord).then(() => {\n        // return to records list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Handles the delete button click and returns to the records list\n     */\n    const deleteAction = (): void => {\n      // parse data\n      const recordId = getRecordId();\n\n      // delete data\n      recordService.delete(recordId).then(() => {\n        // return to records list\n        router.go(-1);\n      });\n    };\n\n    /**\n     * Masks the time field as the user edits its value\n     */\n    const maskTimeField = (): void => {\n      if (time.value.length < 2) {\n        return;\n      } else if (!time.value.includes(':')) {\n        time.value = time.value + ':';\n      }\n    };\n\n    // load services\n    serviceService.getAll().then((entities: Service[]) => {\n      services.value = entities;\n    });\n\n    // load current client\n    const clientId = getClientId();\n    clientService.get(clientId).then((entity: Client) => {\n      name.value = entity.name;\n    });\n\n    // loading information on creation\n    if (!props.isEditing) {\n      // set default value for date and time\n      const now = new Date();\n      date.value = dateToString(now);\n      time.value = timeToString(now);\n    }\n\n    // loading information on edit\n    else {\n      // getting the client being edited\n      const recordId = getRecordId();\n      recordService.get(recordId).then((record: Record) => {\n        // updating fields\n        serviceEntries.value = record.services;\n        date.value = dateToString(record.date);\n        time.value = record.time;\n        details.value = record.details;\n      });\n    }\n\n    // expose template variables\n    return {\n      header,\n      name,\n      serviceEntries,\n      date,\n      time,\n      details,\n      serviceSelector,\n      services,\n      total,\n      handleServiceEntryOpen,\n      handleServiceSelection,\n      handleServiceEntryDelete,\n      cancelAction,\n      saveAction,\n      editAction,\n      deleteAction,\n      maskTimeField\n    };\n  }\n});\n","import { render } from \"./RecordForm.vue?vue&type=template&id=9949ab02&scoped=true\"\nimport script from \"./RecordForm.vue?vue&type=script&lang=ts\"\nexport * from \"./RecordForm.vue?vue&type=script&lang=ts\"\n\nimport \"./RecordForm.vue?vue&type=style&index=0&id=9949ab02&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-9949ab02\"\n\nexport default script","import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router';\nimport Home from '../views/Home.vue';\nimport Clients from '../views/Clients.vue';\nimport Services from '../views/Services.vue';\nimport ClientForm from '../views/ClientForm.vue';\nimport ServiceForm from '../views/ServiceForm.vue';\nimport ClientDetails from '../views/ClientDetails.vue';\nimport RecordForm from '../views/RecordForm.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home\n  },\n  {\n    path: '/clients',\n    name: 'Clients',\n    component: Clients\n  },\n  {\n    path: '/services',\n    name: 'Services',\n    component: Services\n  },\n  {\n    path: '/clients/:id',\n    name: 'ClientDetails',\n    component: ClientDetails\n  },\n  {\n    path: '/clients/new',\n    name: 'NewClient',\n    component: ClientForm\n  },\n  {\n    path: '/clients/:clientId/records/new',\n    name: 'NewRecord',\n    component: RecordForm\n  },\n  {\n    path: '/clients/:clientId/records/:recordId',\n    name: 'EditRecord',\n    props: { isEditing: true },\n    component: RecordForm\n  },\n  {\n    path: '/services/new',\n    name: 'NewService',\n    component: ServiceForm\n  },\n  {\n    path: '/clients/:id/edit',\n    name: 'EditClient',\n    props: { isEditing: true },\n    component: ClientForm\n  },\n  {\n    path: '/services/:id/edit',\n    name: 'EditService',\n    props: { isEditing: true },\n    component: ServiceForm\n  }\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\n\nexport default router;\n","import { RouteLocation } from 'vue-router';\nimport router from '../router';\n\n// Defines a global mixin object\nconst mixin = {\n  methods: {\n    navigateTo(route: RouteLocation) {\n      router.push(route);\n    }\n  }\n};\n\nexport default mixin;\n","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport mixin from './util/mixins';\nimport './registerServiceWorker';\n\ncreateApp(App)\n  .use(router)\n  .mixin(mixin)\n  .mount('#app');\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./InputField.vue?vue&type=style&index=0&id=bbe38170&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ListItem.vue?vue&type=style&index=0&id=4a1095c0&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ServiceForm.vue?vue&type=style&index=0&id=4762df30&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/map-marked-alt-solid.f3efbe13.svg\";","module.exports = __webpack_public_path__ + \"img/clock-solid.95fe55d9.svg\";","module.exports = __webpack_public_path__ + \"img/plus-solid.7496c38f.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Label.vue?vue&type=style&index=0&id=7fc0a864&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/pen-solid.e203089a.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./AddCircleButton.vue?vue&type=style&index=0&id=07b02b16&lang=scss&scoped=true\""],"sourceRoot":""}